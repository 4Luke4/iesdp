<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title> Effects </title>
<link rel="stylesheet" type="text/css" href="general.css" />
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
</head>
<body>
<div class="title_main">Effects</div>
<br />

<div class="fileheader">Description</div>
<br />
<div class="indent1">
In the Infinity Engine games, there is the pivotally important concept of an &quot;effect&quot;. Effects can do many different things, but examples include
modification of stats, damage, playing of a sound, display of an animation, or a number of other things. These effects are identified by &quot;type&quot; and by several additional parameters. The valid types in BG ranged at least from 0x00 through 0xae. Whether all the intervening values were used or not is unclear, but it appears that most of them are. This section will be devoted to a detailed explanation of the general format of effects and the specific format of different types of effects.<br />
The Effects were also called Op Codes or Operation Codes.<br />
This file is under construction. There is much information which needs to go in this file.&nbsp;&nbsp;&nbsp;<br />
The basic format of an effect is as follows. Note that some of these fields are put to differing uses by different object types. The sizes of all of the
fields is known to be accurate. For ease of reference, each parameter which is referenced by the specific effects will be given a <code>tag</code>.<br />
</div>

<br />
<div class="indent1">
<table border="1" width="98%">
  <colgroup>
    <col class="col1" width="5%">
    <col class="col2" width="12%">
    <col class="col3" width="*">
  </colgroup>
  <thead>
    <tr>
      <th>Offset</th>
      <th>Size (datatype)</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>0x0000</td>
      <td>2 (word)</td>
      <td>Effect type</td>
    </tr>
    <tr>
      <td>0x0002</td>
      <td>1 (byte)</td>
      <td>Target type</td>
    </tr>
    <tr>
      <td>0x0003</td>
      <td>1 (byte)</td>
      <td>Power</td>
    </tr>
    <tr>
      <td>0x0004</td>
      <td>4 (dword)</td>
      <td>Parameter 1</td>
    </tr>
    <tr>
      <td>0x0008</td>
      <td>4 (dword)</td>
      <td>Parameter 2</td>
    </tr>
    <tr>
      <td>0x000c</td>
      <td>2 (word)</td>
      <td>Timing Mode</td>
    </tr>
    <tr>
      <td>0x000e</td>
      <td>4 (dword)</td>
      <td>Duration</td>
    </tr>
    <tr>
      <td>0x0012</td>
      <td>1 (byte)</td>
      <td>Probability (<code>Prob</code>) (Note: This field is actually a word
        in pre-Icewind Dale games -- i.e. 2 bytes, but since it is always
        &lt;=100, they split it into two probabilities.)</td>
    </tr>
    <tr>
      <td>0x0013</td>
      <td>1 (byte)</td>
      <td>Unknown. Another probability?</td>
    </tr>
    <tr>
      <td>0x0014</td>
      <td>8 (resref)</td>
      <td>Resref key</td>
    </tr>
    <tr>
      <td>0x001c</td>
      <td>4 (dword)</td>
      <td>Dice count</td>
    </tr>
    <tr>
      <td>0x0020</td>
      <td>4 (dword)</td>
      <td>Dice sides</td>
    </tr>
    <tr>
      <td>0x0024</td>
      <td>4 (dword)</td>
      <td>Saving throw type</td>
    </tr>
    <tr>
      <td>0x0028</td>
      <td>4 (dword)</td>
      <td>Saving throw bonus</td>
    </tr>
    <tr>
      <td>0x002c</td>
      <td>4 (dword)</td>
      <td>Unknown</td>
    </tr>
  </tbody>
</table>
</div>
<br />

<div class="fileheader">Global behavior of effects</div>
<br />
<div class="indent1">
This section describes the behaviors which are invariant from effect to effect. Each effect, when the associated ability of an ITM or SPL is invoked, will be applied to some target with a certain probability, given by the <code>Prob</code> field. Basically, a random roll between 0 and 99 is made, and if it is less than <code>Prob</code> for the given effect, the effect will be invoked. When the effect is invoked, the target is given a chance to save against it according to the <code>SaveType</code> and <code>SaveBonus</code>, as well as the resistances for their particular CRE resource. If the effect is invoked and the target fails the saving throw, then the effect actually occurs. The <code>Flags</code> determine when the effect begins and when it ends. Typically an effect will either occur immediately and expire later or will be an instantaneous effect which occurs later. Frequently, delayed events are sound effects and such.<br />

<br />

<strong>Conventions</strong><br />
<div class="indent1">
The following conventions will be observed below for simplicity:<br />
<div class="indent1">
  <li>An effect for which the <code>Flags</code> word is equal to either 0x0001
    or 0x0101 will be called a &quot;<i>Permanent</i>&quot; effect.
    Equivalently, this is an effect for which <code>(Flags &amp; ~0x100) ==
    0x0001</code>. It is clear that this is the form that the test takes in the
    actual Infinity Engine code.</li>
</div>
</div>

</body>
</html>
