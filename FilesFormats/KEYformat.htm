<html>


<!-- Mirrored from www25.brinkster.com by HTTrack Website Copier/3.x [XR,YP'2001] -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1250">
<meta http-equiv="Content-Language" content="en-us">
<link href="ManverusStyle.css" type=text/css rel=stylesheet>
<title>IE File Formats</title>
</head>

<body>

<h1 align="center">KEY files</h1>
<table border="1" width="610">
  <tr>
    <td width="28%">FileExtension :</td>
    <td width="72%">KEY</td>
  </tr>
  <tr>
    <td width="28%">Content :</td>
    <td width="72%">Description of KEY resource fileV.1.0</td>
  </tr>
  <tr>
    <td width="28%">History :</td>
    <td width="72%">File done by IEFFHP</td>
  </tr>
</table>
<h2>Description</h2>
<p>Each Infinity Engine game has a KEY file with it. The KEY file is loaded at
startup, and the resources indexed in it are added to a hash table. <a href="BIFformat.htm"><font color="#FF0000"> BIF files</font></a>
included in the game should be indexed in the KEY file, so that the resource
manager knows which resources may be found in each <a href="BIFformat.htm"><font color="#FF0000"> BIF
file</font></a>. The KEY file
indicates which files are contained in which <a href="BIFformat.htm"><font color="#FF0000">BIF</font></a>, and what locations (CDs, cache
directory, etc) should be searched for the resource. The KEY file also maintains
a mapping from resource names (8-byte names) to a 32-bit ID of sorts, of which
the bottom 12-bits are used to identify an individual resource within a <a href="BIFformat.htm"><font color="#FF0000"> BIF
file</font></a>.</p>
<h2><a name="formKEY_Versions">KEY file versions</a></h2>
<ul>
  <li><a href="#formKEYV1">V1: Baldur's Gate, Planescape: Torment, Icewind Dale</a></li>
</ul>
<h2 class="frmhead"><a name="formKEYV1">KEY V1</a></h2>
<p>Overall structure</p>
<ul>
  <li><a href="#formKEYV1_Header">Header</a>
  <li><a href="#formKEYV1_BifIndices">Bif indices</a>
  <li><em>Strings referenced by Bif indices</em>
  <li><a href="#formKEYV1_ResIndices">Resource indices</a></li>
</ul>
<h4 class="reshead"><a name="formKEYV1_Header">KEY V1 Header</a></h4>
<table border="1" class="tbl3" width="98%">
  <colgroup>
    <col class="col1" width="5%">
    <col class="col2" width="12%">
    <col class="col3" width="*">
  </colgroup>
  <thead>
    <tr>
      <th><font color="#000000">Offset</font></th>
      <th><font color="#000000">Size (data type)</font></th>
      <th><font color="#000000">Description</font></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>0x0000</td>
      <td>4 (char array)</td>
      <td>Signature ('KEY ')</td>
    </tr>
    <tr>
      <td>0x0004</td>
      <td>4 (char array)</td>
      <td>Version ('V1 ')</td>
    </tr>
    <tr>
      <td>0x0008</td>
      <td>4 (dword)</td>
      <td>Number of <a href="#formKEYV1_BifIndices">BIF entries</a></td>
    </tr>
    <tr>
      <td>0x000c</td>
      <td>4 (dword)</td>
      <td>Number of <a href="#formKEYV1_ResIndices">resource entries</a></td>
    </tr>
    <tr>
      <td>0x0010</td>
      <td>4 (dword)</td>
      <td>Offset of <a href="#formKEYV1_BifIndices">BIF entries</a> from start
        of file</td>
    </tr>
    <tr>
      <td>0x0014</td>
      <td>4 (dword)</td>
      <td>Offset of <a href="#formKEYV1_ResIndices">resource entries</a> from
        start of file</td>
    </tr>
  </tbody>
</table>
<p>&nbsp;</p>
<h4 class="reshead"><a name="formKEYV1_BifIndices">KEY V1 Bif Entries</a></h4>
<p>The BIF entries typically occur immediately after the header. The structures
are packed tight -- i.e. not padded to a multiple of 4 bytes</p>
<table border="1" class="tbl3" width="509">
  <colgroup>
    <col class="col1" width="5%">
    <col class="col2" width="12%">
    <col class="col3" width="*">
  </colgroup>
  <thead>
    <tr>
      <th width="48"><font color="#000000">Offset</font></th>
      <th width="103"><font color="#000000">Size (data type)</font></th>
      <th width="336"><font color="#000000">Description</font></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td width="48">0x0000</td>
      <td width="103">4 (dword)</td>
      <td width="336">Length of BIF file</td>
    </tr>
    <tr>
      <td width="48">0x0004</td>
      <td width="103">4 (dword)</td>
      <td width="336">Offset from start of file to ASCIIZ BIF filename</td>
    </tr>
    <tr>
      <td width="48">0x0008</td>
      <td width="103">2 (word)</td>
      <td width="336">Length, including terminating NUL, of ASCIIZ BIF filename</td>
    </tr>
    <tr>
      <td width="48">0x000a</td>
      <td width="103">2 (word)</td>
      <td width="336">Which locations contain this BIF. each location is one bit. The second
        bit from the bottom (bit 1) indicates whether the file is found in the
        'cache' on the hard-drive. (i.e. a temporary cache is set up and the
        files are copied from the CD into the cache, which is assumed to be
        faster than the CD. In memory, it uses bit 1 to indicate that the file
        is available in the cache. The purpose of bit 0 is unknown, but it <em>could</em>
        refer to the fact that the contents of the bif should be searched for in
        the override directory first.</td>
    </tr>
  </tbody>
</table>
<p>&nbsp;</p>
<h4 class="reshead"><a name="formKEYV1_ResIndices">KEY V1 Resource Entries</a></h4>
<p>The resource entries typically occur immediately after the strings section
for the BIF filenames.</p>
<table border="1" class="tbl3" width="509">
  <colgroup>
    <col class="col1" width="5%">
    <col class="col2" width="12%">
    <col class="col3" width="*">
  </colgroup>
  <thead>
    <tr>
      <th width="48"><font color="#000000">Offset</font></th>
      <th width="103"><font color="#000000">Size (data type)</font></th>
      <th width="336"><font color="#000000">Description</font></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td width="48">0x0000</td>
      <td width="103">8 (resref)</td>
      <td width="336">Resource name. Together with the resource type, this allows a resource
        to be uniquely identified.</td>
    </tr>
    <tr>
      <td width="48">0x0008</td>
      <td width="103">2 (word)</td>
      <td width="336">Resource type (see the table of <a href="file:///D:/old%20bg2/infinity%20hacking%20project/baldur.html#FileFormats">resTypes</a>
        for the allowable values of this word (some of which are different
        between, e.g. BG and Torment, or even BG and ToTSC).</td>
    </tr>
    <tr>
      <td width="48">0x000a</td>
      <td width="103">4 (dword)</td>
      <td width="336">Resource locator. Throughout the resource manager of the Infinity
        Engine, 32-bit values are used as a sort of 'resource index', which
        codifies the source of the resource as well as which source it refers
        to. This is that value, as stored on disk. It can go through some
        changes as it is being loaded, but the basic layout of the value on disk
        is:
        <ul>
          <li>bits 31-20: source index (on disk, this is the ordinal value
            giving the index of the corresponding bif entry)
          <li>bits 19-14: tileset index
          <li>bits 13- 0: non-tileset file index (any 12 bit value, so long as
            it matches the value used in the .bif file)</li>
        </ul>
        In memory, the 'bif index' becomes the 'source index' (i.e. can refer to
        override directory files, or whatever).</td>
    </tr>
  </tbody>
</table></body>


<!-- Mirrored from www25.brinkster.com by HTTrack Website Copier/3.x [XR,YP'2001] -->
</html>
