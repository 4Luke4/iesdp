<html>


<!-- Mirrored from www25.brinkster.com by HTTrack Website Copier/3.x [XR,YP'2001] -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1250">
<meta http-equiv="Content-Language" content="en-us">
<link href="ManverusStyle.css" type=text/css rel=stylesheet>
<title>IE File Formats</title>
</head>

<body>
<h1 align="center">CHR file format</h1>
<table border="1" width="610">
  <tr>
    <td width="28%">FileExtension :</td>
    <td width="72%">CHR</td>
  </tr>
  <tr>
    <td width="28%">Content :</td>
    <td width="72%">Description of protagonists/players files.</td>
  </tr>
  <tr>
    <td width="28%">History :</td>
    <td width="72%">File done by Manveru (06.09.2001) ATTENTION FILE UNDER
      CONSTRUCTION - a lot of data here may be invalid. !</td>
  </tr>
</table>
<h2>Description</h2>
<p>This file format describes a special kind of creature - the protagonist
(probably also other members of party are saved in this format). The specific stats which are stored in the given structures are given by a
mapping in one of the IDS or 2DA files. Details will be forthcoming when I get
some more time.</p>
<h2><a name="formCRE_Versions">CHR file versions</a></h2>
<ul>
  <li><a href="#formCREV1_0">V1.0: Baldur's Gate</a>
  <li><a href="#formCREV1_0">V.2.0 : Baldur's Gate 2, BG2 ToB</a></li>
  <li><a href="#formCREV1_2">V1.2: Planescape: Torment</a>
  <li><a href="#formCREV9_0">V9.0: Icewind Dale</a></li>
</ul>
<h2 class="frmhead"><a name="formCREV1_0">CHR V1.0</a></h2>
<p>Overall structure</p>
<ul>
  <li><a href="#CHR v.1.0 file header">CHR file header</a>
  <li><a href="#formCREV1_0_Header">Internal CRE v.1.0 file header</a>
  </li>
  <li><a href="#formCREV1_0_KnownSpell">Known spells section</a>
  <li><a href="#formCREV1_0_MemSpellInfo">Spell memorization info</a>
  <li><a href="#formCREV1_0_MemSpell">Memorized spells section</a>
  <li><a href="#formCREV1_0_Item">Items section</a>
  <li><a href="#formCREV1_0_ItemSlots">&quot;Item slots&quot;</a></li>
</ul>
<h4 class="reshead">&nbsp;</h4>
<b><a name="CHR v.1.0 file header">CHR V.1.0 file header</a></b>
<h4 class="reshead">Header is 100 (64h) bytes long.</h4>
<table border="1" width="520">
  <tr>
      <th width="77"><font color="#000000">Offset</font></th>
      <th width="125"><font color="#000000">Size (data type)</font></th>
      <th width="296"><font color="#000000">Description</font></th>
  </tr>
  <tr>
    <td width="77">0x0000</td>
    <td width="125">4(char array)</td>
    <td width="296">Signature ('CHR ')</td>
  </tr>
  <tr>
    <td width="77">0x0004</td>
    <td width="125">4(char array)</td>
    <td width="296">Version ('V1.0')</td>
  </tr>
  <tr>
    <td width="77">0x0008</td>
    <td width="125">32(string)</td>
    <td width="296">Name of protagonist/player</td>
  </tr>
  <tr>
    <td width="77">0x0028</td>
    <td width="125">4 (dword)</td>
    <td width="296">indicates the offset where starts the <a href="#formCREV1_0_Header"><font color="#FF0000">internal
      CRE structure.</font></a></td>
  </tr>
  <tr>
    <td width="77"><font color="#000099">0x002c</font></td>
    <td width="125"><font color="#000099">4 (dword)</font></td>
    <td width="296">Length of the CRE v1.0 file embedded within the character
      file</td>
  </tr>
  <tr>
    <td width="77"><font color="#000099">0x0030</font></td>
    <td width="125"><font color="#000099">13*4 (dwords)</font></td>
    <td width="296"><font color="#000099">unknown, different value</font></td>
  </tr>
</table>
<p class="reshead">&nbsp;</p>
<h4 class="reshead"><a name="formCREV1_0_Header">Internal CRE V1.0 Header</a></h4>
<table border="1" class="tbl3" width="516">
  <colgroup>
    <col class="col1" width="5%">
    <col class="col2" width="12%">
    <col class="col3" width="*">
  </colgroup>
  <thead>
    <tr>
      <th width="48"><font color="#000000">Offset</font></th>
      <th width="120"><font color="#000000">Size (data type)</font></th>
      <th width="326"><font color="#000000">Description</font></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td width="48">0x0000</td>
      <td width="120">4 (char array)</td>
      <td width="326">Signature ('CRE ')</td>
    </tr>
    <tr>
      <td width="48">0x0004</td>
      <td width="120">4 (char array)</td>
      <td width="326">Version ('V1.0')</td>
    </tr>
    <tr>
      <td width="48">0x0008</td>
      <td width="120">4 (Strref)</td>
      <td width="326">Long Creature name - not used in CHR files</td>
    </tr>
    <tr>
      <td width="48">0x000c</td>
      <td width="120">4 (Strref)</td>
      <td width="326">Short Creature name - not used in CHR files</td>
    </tr>
    <tr>
      <td width="48">0x0010</td>
      <td width="120">1 (byte)</td>
      <td width="326">This offset determine whether creature is multiclass or
        dualclass.&nbsp;</td>
    </tr>
    <tr>
      <td width="48">0x0011</td>
      <td width="120">1 (byte)</td>
      <td width="326">Disallows exportation and customization of all but the
        script if this byte is set to anything but 08. So consequently this
        offset is set to 08 in case of protagonist CHR files.</td>
    </tr>
    <tr class="unk">
      <td width="48">0x0012</td>
      <td width="120">2 (word)</td>
      <td width="326"><font color="#000099">Unknown</font></td>
    </tr>
    <tr>
      <td width="48">0x0014</td>
      <td width="120">4 (dword)</td>
      <td width="326">experience value (i.e. value in XP for killing this creature)
        - set to 0 in CHR files</td>
    </tr>
    <tr>
      <td width="48">0x0018</td>
      <td width="120">4 (dword)</td>
      <td width="326">experience</td>
    </tr>
    <tr>
      <td width="48">0x001c</td>
      <td width="120">4 (dword)</td>
      <td width="326">gold</td>
    </tr>
    <tr>
      <td width="48">0x0020</td>
      <td width="120">4 (dword)</td>
      <td width="326">(permanent) status flags (as per STATE.IDS). This varies from game to
        game, but includes such things as invisibility, charmed, silenced, and
        draw-upon-holy-might.</td>
    </tr>
    <tr>
      <td width="48">0x0024</td>
      <td width="120">2 (word)</td>
      <td width="326">Current hit points</td>
    </tr>
    <tr>
      <td width="48">0x0026</td>
      <td width="120">2 (word)</td>
      <td width="326">Max hit points</td>
    </tr>
    <tr>
      <td width="48">0x0028</td>
      <td width="120">2 (word)</td>
      <td width="326">Animation ID (as from ANIMATE.IDS). Note that while there is some
        structure to the ordering of these, it is actually worked out via a sort
        of tangled routine which sorts into major categories based on the high
        nybble. In Baldur's Gate, the way <a href="BAMformat.htm"><font color="#FF0000"> BAM</font></a> files (for display on the overland
        screen) are mapped to CRE files is via this field; the resource names
        which are mapped to by ANIMATE ids are hard-coded in the executable.
        Yuck.</td>
    </tr>
    <tr class="unk">
      <td width="48">0x002a</td>
      <td width="120">2 (word)</td>
      <td width="326"><font color="#000099">unknown</font></td>
    </tr>
    <tr>
      <td width="48">0x002c</td>
      <td width="120">1 (byte)</td>
      <td width="326">metal color index</td>
    </tr>
    <tr>
      <td width="48">0x002d</td>
      <td width="120">1 (byte)</td>
      <td width="326">minor color index</td>
    </tr>
    <tr>
      <td width="48">0x002e</td>
      <td width="120">1 (byte)</td>
      <td width="326">major color index</td>
    </tr>
    <tr>
      <td width="48">0x002f</td>
      <td width="120">1 (byte)</td>
      <td width="326">skin color index</td>
    </tr>
    <tr>
      <td width="48">0x0030</td>
      <td width="120">1 (byte)</td>
      <td width="326">leather color index</td>
    </tr>
    <tr>
      <td width="48">0x0031</td>
      <td width="120">1 (byte)</td>
      <td width="326">armor color index</td>
    </tr>
    <tr>
      <td width="48">0x0032</td>
      <td width="120">1 (byte)</td>
      <td width="326">hair color index</td>
    </tr>
    <tr class="upd">
      <td width="48">0x0033</td>
      <td width="120">1 (byte)</td>
      <td width="326">In TotSC, a new format for effects was created, as evident in their
        EFF V2.0 files. In Icewind Dale, and possibly also in TotSC, this byte
        is a flag: if equal to 0, the effect structures attached to this CRE
        file are old style <a href="../Effects/effects.htm"><font color="#FF0000">effects</font></a>.
        If this byte is equal to 1, the effect structures are as in the EFF V2.0
        format.</td>
    </tr>
    <tr>
      <td width="48">0x0034</td>
      <td width="120">8 (resref)</td>
      <td width="326">resource name for the 'small portrait' associated with this CRE, if
        any (i.e. small portrait as customizable for each character in the game
        options)</td>
    </tr>
    <tr>
      <td width="48">0x003c</td>
      <td width="120">8 (resref)</td>
      <td width="326">resource name for the 'large portrait' associated with this CRE, if
        any (i.e. large portrait as customizable for each character in the game
        options)</td>
    </tr>
    <tr>
      <td width="48">0x0044</td>
      <td width="120">1 (byte)</td>
      <td width="326">reputation (minimum value: 0)</td>
    </tr>
    <tr class="unk">
      <td width="48">0x0045</td>
      <td width="120">1 (byte)</td>
      <td width="326">Hide In Shadows (Kit/Race/Dex Bonuses are separate from
        these values)</td>
    </tr>
    <tr>
      <td width="48">0x0046</td>
      <td width="120">2 (signed word)</td>
      <td width="326">armor class (natural?)</td>
    </tr>
    <tr>
      <td width="48">0x0048</td>
      <td width="120">2 (signed word)</td>
      <td width="326">armor class (effective?)</td>
    </tr>
    <tr>
      <td width="48">0x004a</td>
      <td width="120">2 (signed word)</td>
      <td width="326">armor class (crushing attacks modifier)</td>
    </tr>
    <tr>
      <td width="48">0x004c</td>
      <td width="120">2 (signed word)</td>
      <td width="326">armor class (missile attacks modifier)</td>
    </tr>
    <tr>
      <td width="48">0x004e</td>
      <td width="120">2 (signed word)</td>
      <td width="326">armor class (piercing attacks modifier)</td>
    </tr>
    <tr>
      <td width="48">0x0050</td>
      <td width="120">2 (signed word)</td>
      <td width="326">armor class (slashing attacks modifier)</td>
    </tr>
    <tr>
      <td width="48">0x0052</td>
      <td width="120">1 (byte)</td>
      <td width="326">THAC0 (1-25)</td>
    </tr>
    <tr>
      <td width="48">0x0053</td>
      <td width="120">1 (byte)</td>
      <td width="326">number of attacks (0-10)</td>
    </tr>
    <tr>
      <td width="48">0x0054</td>
      <td width="120">1 (byte)</td>
      <td width="326">save versus death (0-20)</td>
    </tr>
    <tr>
      <td width="48">0x0055</td>
      <td width="120">1 (byte)</td>
      <td width="326">save versus wands (0-20)</td>
    </tr>
    <tr>
      <td width="48">0x0056</td>
      <td width="120">1 (byte)</td>
      <td width="326">save versus poly (0-20)</td>
    </tr>
    <tr>
      <td width="48">0x0057</td>
      <td width="120">1 (byte)</td>
      <td width="326">save versus breath (0-20)</td>
    </tr>
    <tr>
      <td width="48">0x0058</td>
      <td width="120">1 (byte)</td>
      <td width="326">save versus spell (0-20)</td>
    </tr>
    <tr>
      <td width="48">0x0059</td>
      <td width="120">1 (byte)</td>
      <td width="326">resist fire (0-100)</td>
    </tr>
    <tr>
      <td width="48">0x005a</td>
      <td width="120">1 (byte)</td>
      <td width="326">resist cold (0-100)</td>
    </tr>
    <tr>
      <td width="48">0x005b</td>
      <td width="120">1 (byte)</td>
      <td width="326">resist electricity (0-100)</td>
    </tr>
    <tr>
      <td width="48">0x005c</td>
      <td width="120">1 (byte)</td>
      <td width="326">resist acid (0-100)</td>
    </tr>
    <tr>
      <td width="48">0x005d</td>
      <td width="120">1 (byte)</td>
      <td width="326">resist magic (0-100)</td>
    </tr>
    <tr>
      <td width="48">0x005e</td>
      <td width="120">1 (byte)</td>
      <td width="326">resist magic fire (0-100)</td>
    </tr>
    <tr>
      <td width="48">0x005f</td>
      <td width="120">1 (byte)</td>
      <td width="326">resist magic cold (0-100)</td>
    </tr>
    <tr>
      <td width="48">0x0060</td>
      <td width="120">1 (byte)</td>
      <td width="326">resist slashing (0-100)</td>
    </tr>
    <tr>
      <td width="48">0x0061</td>
      <td width="120">1 (byte)</td>
      <td width="326">resist crushing (0-100)</td>
    </tr>
    <tr>
      <td width="48">0x0062</td>
      <td width="120">1 (byte)</td>
      <td width="326">resist piercing (0-100)</td>
    </tr>
    <tr>
      <td width="48">0x0063</td>
      <td width="120">1 (byte)</td>
      <td width="326">resist missile (0-100)</td>
    </tr>
    <tr class="unk">
      <td width="48">0x0064</td>
      <td width="120">1 (byte)</td>
      <td width="326">detect illusion skill (minimum value : 0)</td>
    </tr>
    <tr class="unk">
      <td width="48">0x0065</td>
      <td width="120">1 (byte)</td>
      <td width="326">set traps skill</td>
    </tr>
    <tr>
      <td width="48">0x0066</td>
      <td width="120">1 (byte)</td>
      <td width="326">lore skill (0-100)</td>
    </tr>
    <tr>
      <td width="48">0x0067</td>
      <td width="120">1 (byte)</td>
      <td width="326">lockpicking skill (minimum value: 0)</td>
    </tr>
    <tr>
      <td width="48">0x0068</td>
      <td width="120">1 (byte)</td>
      <td width="326">stealth skill (minimum value: 0)</td>
    </tr>
    <tr>
      <td width="48">0x0069</td>
      <td width="120">1 (byte)</td>
      <td width="326">find/disarm traps skill (minimum value: 0)</td>
    </tr>
    <tr>
      <td width="48">0x006a</td>
      <td width="120">1 (byte)</td>
      <td width="326">pick-pockets skill (minimum value: 0)</td>
    </tr>
    <tr>
      <td width="48">0x006b</td>
      <td width="120">1 (byte)</td>
      <td width="326">fatigue (0-100)</td>
    </tr>
    <tr>
      <td width="48">0x006c</td>
      <td width="120">1 (byte)</td>
      <td width="326">intoxification (0-100)</td>
    </tr>
    <tr>
      <td width="48">0x006d</td>
      <td width="120">1 (byte)</td>
      <td width="326">luck</td>
    </tr>
    <tr>
      <td width="48">0x006e</td>
      <td width="120">1 (byte)</td>
      <td width="326"><strong>(not used in BG2)</strong> Large swords proficiency (It is
        rumored that proficiencies are packed in 3-bit chunks for the primary
        and secondary classes -- i.e. primary class proficiency is the low 3
        bits, secondary is the middle 3 bits. This may be true.)</td>
    </tr>
    <tr>
      <td width="48">0x006f</td>
      <td width="120">1 (byte)</td>
      <td width="326"><strong>(not used in BG2)</strong> Small swords proficiency (It is
        rumored that proficiencies are packed in 3-bit chunks for the primary
        and secondary classes -- i.e. primary class proficiency is the low 3
        bits, secondary is the middle 3 bits. This may be true.)</td>
    </tr>
    <tr>
      <td width="48">0x0070</td>
      <td width="120">1 (byte)</td>
      <td width="326"><strong>(not used in BG2)</strong> Bows proficiency (It is rumored
        that proficiencies are packed in 3-bit chunks for the primary and
        secondary classes -- i.e. primary class proficiency is the low 3 bits,
        secondary is the middle 3 bits. This may be true.)</td>
    </tr>
    <tr>
      <td width="48">0x0071</td>
      <td width="120">1 (byte)</td>
      <td width="326"><strong>(not used in BG2)</strong> Spears proficiency (It is rumored
        that proficiencies are packed in 3-bit chunks for the primary and
        secondary classes -- i.e. primary class proficiency is the low 3 bits,
        secondary is the middle 3 bits. This may be true.)</td>
    </tr>
    <tr>
      <td width="48">0x0072</td>
      <td width="120">1 (byte)</td>
      <td width="326"><strong>(not used in BG2)</strong> Blunt weapons proficiency (It is
        rumored that proficiencies are packed in 3-bit chunks for the primary
        and secondary classes -- i.e. primary class proficiency is the low 3
        bits, secondary is the middle 3 bits. This may be true.)</td>
    </tr>
    <tr>
      <td width="48">0x0073</td>
      <td width="120">1 (byte)</td>
      <td width="326"><strong>(not used in BG2)</strong> Spiked weapons proficiency (It is
        rumored that proficiencies are packed in 3-bit chunks for the primary
        and secondary classes -- i.e. primary class proficiency is the low 3
        bits, secondary is the middle 3 bits. This may be true.)</td>
    </tr>
    <tr>
      <td width="48">0x0074</td>
      <td width="120">1 (byte)</td>
      <td width="326"><strong>(not used in BG2)</strong> Axe weapons proficiency (It is
        rumored that proficiencies are packed in 3-bit chunks for the primary
        and secondary classes -- i.e. primary class proficiency is the low 3
        bits, secondary is the middle 3 bits. This may be true.)</td>
    </tr>
    <tr>
      <td width="48">0x0075</td>
      <td width="120">1 (byte)</td>
      <td width="326"><strong>(not used in BG2)</strong> Missile weapons proficiency (It is
        rumored that proficiencies are packed in 3-bit chunks for the primary
        and secondary classes -- i.e. primary class proficiency is the low 3
        bits, secondary is the middle 3 bits. This may be true.)</td>
    </tr>
    <tr class="unk">
      <td width="48">0x0076</td>
      <td width="120">13 (bytes)</td>
      <td width="326"><font color="#000099">unknown I haven't seen other value
        but zero&nbsp;</font></td>
    </tr>
    <tr>
      <td width="48">0x0083</td>
      <td width="120">1 (byte)</td>
      <td width="326">tracking skill (0-100)</td>
    </tr>
    <tr class="unk">
      <td width="48">0x0084</td>
      <td width="120">32 (bytes)</td>
      <td width="326"><font color="#000099">unknown I haven't seen other value
        but zero</font></td>
    </tr>
    <tr>
      <td width="48">0x00a4</td>
      <td width="120">4*100 (Strref*100)</td>
      <td width="326"><b>Strrefs which relate to the character. Most of them relate to the
        sound-set. In the file SOUNDOFF.IDS, there are several numbers. These
        indicate indices into this array, and they match various occurrences to
        Strrefs. </b> For instance, SOUNDOFF.IDS has &quot;SELECT_RARE&quot;, at
        index 35. SELECT_RARE actually takes up 4 entries -- the next numbered
        entry is at 39. So the 35th through the 39th entries in this are the
        &quot;select rare&quot; entries, which, it turns out, correspond to the
        amusing sound-bites you get if you repeatedly click on a character. <b> A
        character's biography appears to be stored in the 74th entry in this
        array. </b> What any other entries may be used for is unknown, although I
        suspect it varies from character to character, judging from the label
        &quot;MISC&quot; that is applied around entry #58. Presumably the rest
        of the entries are just for miscellaneous purposes which only apply to
        certain characters.</td>
    </tr>
    <tr>
      <td width="48">0x0234</td>
      <td width="120">1 (byte)</td>
      <td width="326">Highest attained level in primary class (0-100)</td>
    </tr>
    <tr>
      <td width="48">0x0235</td>
      <td width="120">1 (byte)</td>
      <td width="326">Highest attained level in secondary class (0-100)</td>
    </tr>
    <tr>
      <td width="48">0x0236</td>
      <td width="120">1 (byte)</td>
      <td width="326">Highest attained level in tertiary class (0-100)&nbsp;
        <p>0 is Dual Classed cre (if 0x0235 is non-zero, &gt;0 is multi-classed)</p>
      </td>
    </tr>
    <tr class="unk">
      <td width="48">0x0237</td>
      <td width="120">1 (byte)</td>
      <td width="326">Value 1 is Dual classed, but not reached first class level
        +1 yet (first class disabled) , 2 is when the creature has.</td>
    </tr>
    <tr>
      <td width="48">0x0238</td>
      <td width="120">1 (byte)</td>
      <td width="326">Strength (1-25)</td>
    </tr>
    <tr>
      <td width="48">0x0239</td>
      <td width="120">1 (byte)</td>
      <td width="326">Strength % Bonus (0-100)</td>
    </tr>
    <tr>
      <td width="48">0x023a</td>
      <td width="120">1 (byte)</td>
      <td width="326">Intelligence (1-25)</td>
    </tr>
    <tr>
      <td width="48">0x023b</td>
      <td width="120">1 (byte)</td>
      <td width="326">Wisdom (1-25)</td>
    </tr>
    <tr>
      <td width="48">0x023c</td>
      <td width="120">1 (byte)</td>
      <td width="326">Dexterity (1-25)</td>
    </tr>
    <tr>
      <td width="48">0x023d</td>
      <td width="120">1 (byte)</td>
      <td width="326">Constitution (1-25)</td>
    </tr>
    <tr>
      <td width="48">0x023e</td>
      <td width="120">1 (byte)</td>
      <td width="326">Charisma (1-25)</td>
    </tr>
    <tr>
      <td width="48">0x023f</td>
      <td width="120">1 (byte)</td>
      <td width="326">Morale</td>
    </tr>
    <tr>
      <td width="48">0x0240</td>
      <td width="120">1 (byte)</td>
      <td width="326">Morale break</td>
    </tr>
    <tr>
      <td width="48">0x0241</td>
      <td width="120">1 (byte)</td>
      <td width="326">Racial enemy (see RACE.IDS)</td>
    </tr>
    <tr class="upd">
      <td width="48">0x0242</td>
      <td width="120">1 (byte)</td>
      <td width="326">Morale Recovery Time</td>
    </tr>
    <tr class="unk">
      <td width="48">0x0243</td>
      <td width="120">3 (bytes)</td>
      <td width="326"><font color="#000099">unknown ,always zeros&nbsp;</font></td>
    </tr>
    <tr>
      <td width="48">0x0246</td>
      <td width="120">1 (byte)</td>
      <td width="326">kit number</td>
    </tr>
    <tr>
      <td width="48">0x0247</td>
      <td width="120">1 (byte)</td>
      <td width="326">mage type (see MAGETYPE.IDS) (64 none) in bit format (i.e.
        powers of 2).<br>
      </td>
    </tr>
    <tr>
      <td width="48">0x0248</td>
      <td width="120">8 (resref)</td>
      <td width="326">creature <a href="BCSformat.htm"><font color="#FF0000">script</font></a>
        (&quot;override&quot; script?)</td>
    </tr>
    <tr>
      <td width="48">0x0250</td>
      <td width="120">8 (resref)</td>
      <td width="326">creature <a href="BCSformat.htm"><font color="#FF0000">script</font></a>
        (&quot;class&quot; script?)</td>
    </tr>
    <tr>
      <td width="48">0x0258</td>
      <td width="120">8 (resref)</td>
      <td width="326">creature <a href="BCSformat.htm"><font color="#FF0000">script</font></a>
        (&quot;race&quot; script?)</td>
    </tr>
    <tr>
      <td width="48">0x0260</td>
      <td width="120">8 (resref)</td>
      <td width="326">creature <a href="BCSformat.htm"><font color="#FF0000">script</font></a>
        (&quot;general&quot; script?)</td>
    </tr>
    <tr>
      <td width="48">0x0268</td>
      <td width="120">8 (resref)</td>
      <td width="326">creature <a href="BCSformat.htm"><font color="#FF0000">script</font></a>
        (&quot;default&quot; script?)</td>
    </tr>
    <tr>
      <td width="48">0x0270</td>
      <td width="120">1 (byte)</td>
      <td width="326">&quot;Enemy-Ally&quot; type (see EA.IDS). This field and the next
        several require some explanation. It seems probable, due to the similar
        layout of these fields, that this is actually an object identifier. For
        reference, see the script compiler manual, but in short, it means that
        it has EA, GENERAL, RACE, CLASS, and SPECIFIC, among other things. This
        data could be used to explain the other unused fields. The only
        difficulty with this theory is that the byte which is currently listed
        as &quot;gender&quot; would normally be 'special case' according to the
        script compiler manual. On the other hand, the script compiler manual is
        poorly written and inaccurate in places, probably the result of a quick
        edit of an internal specification which was hacked into a public
        document.</td>
    </tr>
    <tr>
      <td width="48">0x0271</td>
      <td width="120">1 (byte)</td>
      <td width="326">&quot;General&quot; type (see GENERAL.IDS).</td>
    </tr>
    <tr>
      <td width="48">0x0272</td>
      <td width="120">1 (byte)</td>
      <td width="326">&quot;Race&quot; type (see RACE.IDS).</td>
    </tr>
    <tr>
      <td width="48">0x0273</td>
      <td width="120">1 (byte)</td>
      <td width="326">&quot;Class&quot; type (see CLASS.IDS).</td>
    </tr>
    <tr>
      <td width="48">0x0274</td>
      <td width="120">1 (byte)</td>
      <td width="326">&quot;Specific&quot; type (see SPECIFIC.IDS).</td>
    </tr>
    <tr>
      <td width="48">0x0275</td>
      <td width="120">1 (byte)</td>
      <td width="326">&quot;Gender&quot; type (see GENDER.IDS).</td>
    </tr>
    <tr>
      <td width="48">0x0276</td>
      <td width="120">5 (bytes)</td>
      <td width="326">unknown; however, see description at &quot;Enemy-Ally&quot; type byte
        above. If this is, in fact, an object id, then this here would be the 5
        bytes which are used for functional specification of an object (see
        OBJECT.IDS). Functional specification of an object involves things like <code>LastAttackerOf(Myself)</code>
        or <code>ProtectorOf(LastTalkedToBy(Protagonist))</code>.</td>
    </tr>
    <tr>
      <td width="48">0x027b</td>
      <td width="120">1 (byte)</td>
      <td width="326">&quot;Alignment&quot; type (see ALIGNMEN.IDS.)</td>
    </tr>
    <tr class="unk">
      <td width="48">0x027c</td>
      <td width="120">2 (word)</td>
      <td width="326"><font color="#000099">unknown. This field and the next appear to hold two 16-bit words, both
        of which are usually 0xffff.</font></td>
    </tr>
    <tr class="unk">
      <td width="48">0x027e</td>
      <td width="120">2 (word)</td>
      <td width="326"><font color="#000099">unknown</font></td>
    </tr>
    <tr class="upd">
      <td width="48">0x0280</td>
      <td width="120">32 (char array)</td>
      <td width="326">This field determines the name of the &quot;death variable&quot; to
        set when this creature has been killed.</td>
    </tr>
    <tr>
      <td width="48">0x02a0</td>
      <td width="120">4 (dword)</td>
      <td width="326"><a href="#formCREV1_0_KnownSpell">Known spells</a> offset</td>
    </tr>
    <tr>
      <td width="48">0x02a4</td>
      <td width="120">4 (dword)</td>
      <td width="326"><a href="#formCREV1_0_KnownSpell">Known spells</a> count</td>
    </tr>
    <tr>
      <td width="48">0x02a8</td>
      <td width="120">4 (dword)</td>
      <td width="326"><a href="#formCREV1_0_MemSpellInfo">Spell memorization info</a> offset</td>
    </tr>
    <tr>
      <td width="48">0x02ac</td>
      <td width="120">4 (dword)</td>
      <td width="326"><a href="#formCREV1_0_MemSpellInfo">Spell memorization info</a>
        entries count</td>
    </tr>
    <tr>
      <td width="48">0x02b0</td>
      <td width="120">4 (dword)</td>
      <td width="326"><a href="#formCREV1_0_MemSpell">Memorized spells</a> offset</td>
    </tr>
    <tr>
      <td width="48">0x02b4</td>
      <td width="120">4 (dword)</td>
      <td width="326"><a href="#formCREV1_0_MemSpell">Memorized spells</a> count</td>
    </tr>
    <tr>
      <td width="48">0x02b8</td>
      <td width="120">4 (dword)</td>
      <td width="326"><a href="#formCREV1_0_ItemSlot">Item slots</a> offset</td>
    </tr>
    <tr>
      <td width="48">0x02bc</td>
      <td width="120">4 (dword)</td>
      <td width="326"><a href="#formCREV1_0_Item">Items </a>offset</td>
    </tr>
    <tr>
      <td width="48">0x02c0</td>
      <td width="120">4 (dword)</td>
      <td width="326"><a href="#formCREV1_0_Item">Items </a>count</td>
    </tr>
    <tr class="upd">
      <td width="48">0x02c4</td>
      <td width="120">4 (dword)</td>
      <td width="326">offset to <a href="../Effects/effects.htm"><font color="#FF0000">effects</font></a>
        currently affecting creature</td>
    </tr>
    <tr class="upd">
      <td width="48">0x02c8</td>
      <td width="120">4 (dword)</td>
      <td width="326">count of <a href="../Effects/effects.htm"><font color="#FF0000">effects</font></a>
        currently affecting creature</td>
    </tr>
    <tr>
      <td width="48">0x02cc</td>
      <td width="120">8 (resref)</td>
      <td width="326">associated <a href="DLGformat.htm"><font color="#FF0000">dialog
        file</font></a>. (A CRE can have a default <a href="DLGformat.htm"><font color="#FF0000">DLG
        file</font></a> associated. This can be overridden in the <a href="AreFormat.htm"><font color="#FF0000">ARE
        file</font></a>, and&nbsp; by a <a href="BCSformat.htm"><font color="#FF0000">script</font></a>).</td>
    </tr>
  </tbody>
</table>
<h4 class="reshead"><a name="formCREV1_0_KnownSpell">CRE V1.0 Known Spells</a></h4>
<p>This section details which spells the creature knows, and it consists of an
array of entries formatted as follows.</p>
<table border="1" class="tbl3" width="509">
  <colgroup>
    <col class="col1" width="5%">
    <col class="col2" width="12%">
    <col class="col3" width="*">
  </colgroup>
  <thead>
    <tr>
      <th width="48">Offset</th>
      <th width="103">Size (data type)</th>
      <th width="336">Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td width="48">0x0000</td>
      <td width="103">8 (resref)</td>
      <td width="336">Resource name of the <a href="SPLformat.htm"><font color="#FF0000">SPL
        file</font></a> holding the particular spell</td>
    </tr>
    <tr>
      <td width="48">0x0008</td>
      <td width="103">2 (word)</td>
      <td width="336">Level of the spell (less 1)</td>
    </tr>
    <tr>
      <td width="48">0x000a</td>
      <td width="103">2 (word)</td>
      <td width="336">Type of the spell (0=Priest, 1=Wizard, 2=Innate, other values? This
        doesn't appear in any of the IDS files, to my knowledge)</td>
    </tr>
  </tbody>
</table>
<h4 class="reshead"><a name="formCREV1_0_MemSpellInfo">CRE V1.0 Spell
Memorization Info</a></h4>
<p>This section details how many spells the creature can memorize, and how many
it has memorized. It consists of an array of entries formatted as follows.</p>
<table border="1" class="tbl3" width="509">
  <colgroup>
    <col class="col1" width="5%">
    <col class="col2" width="12%">
    <col class="col3" width="*">
  </colgroup>
  <thead>
    <tr>
      <th width="48">Offset</th>
      <th width="103">Size (data type)</th>
      <th width="336">Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td width="48">0x0000</td>
      <td width="103">2 (word)</td>
      <td width="336">Spell level (less 1)</td>
    </tr>
    <tr>
      <td width="48">0x0002</td>
      <td width="103">2 (word)</td>
      <td width="336">Number of spells memorizable</td>
    </tr>
    <tr>
      <td width="48">0x0004</td>
      <td width="103">2 (word)</td>
      <td width="336">Number of spells memorizable (how does this differ from the field at
        2?)</td>
    </tr>
    <tr>
      <td width="48">0x0006</td>
      <td width="103">2 (word)</td>
      <td width="336">Spell type (as above in <a href="#formCREV1_0_KnownSpell">Known Spells</a>,
        0=Priest, 1=Wizard, 2=Innate, other values are either unknown or
        invalid).</td>
    </tr>
    <tr>
      <td width="48">0x0008</td>
      <td width="103">4 (dword)</td>
      <td width="336">Index into <a href="#formCREV1_0_MemSpell">memorized spells</a> array
        of first memorized spell of this type in this level.</td>
    </tr>
    <tr>
      <td width="48">0x000c</td>
      <td width="103">4 (dword)</td>
      <td width="336">Count of memorized spell entries in <a href="#formCREV1_0_MemSpell">memorized
        spells</a> array of memorized spells of this type in this level.</td>
    </tr>
  </tbody>
</table>
<h4 class="reshead"><a name="formCREV1_0_MemSpell">CRE V1.0 Memorized Spells
Table</a></h4>
<p>This section details which spells the character has memorized. It consists of
an array of entries formatted as follows.</p>
<table border="1" class="tbl3" width="509">
  <colgroup>
    <col class="col1" width="5%">
    <col class="col2" width="12%">
    <col class="col3" width="*">
  </colgroup>
  <thead>
    <tr>
      <th width="48">Offset</th>
      <th width="103">Size (data type)</th>
      <th width="336">Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td width="48">0x0000</td>
      <td width="103">8 (resref)</td>
      <td width="336">Resource name of the <a href="SPLformat.htm"><font color="#FF0000">SPL
        file</font></a> holding the particular memorized spell</td>
    </tr>
    <tr class="unc">
      <td width="48">0x0008</td>
      <td width="103">4 (dword)</td>
      <td width="336"><font color="#000099">Unknown; likely, it is set to 1 when the spell is memorized, and set
        to 0 once the spell has been cast. In this way, it keeps track of which
        spells are scheduled to be memorized when the CRE next sleeps.</font></td>
    </tr>
  </tbody>
</table>
<h4 class="reshead"><a name="formCREV1_0_Item">CRE V1.0 Items Table</a></h4>
<p>This section details which items the character has. It consists of an array
of entries formatted as follows.</p>
<table border="1" class="tbl3" width="509">
  <colgroup>
    <col class="col1" width="5%">
    <col class="col2" width="12%">
    <col class="col3" width="*">
  </colgroup>
  <thead>
    <tr>
      <th width="48">Offset</th>
      <th width="103">Size (data type)</th>
      <th width="336">Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td width="48">0x0000</td>
      <td width="103">8 (resref)</td>
      <td width="336">Resource name of the <a href="ITMformat.htm"><font color="#FF0000">ITM
        file</font></a> holding the particular item</td>
    </tr>
    <tr class="unk">
      <td width="48">0x0008</td>
      <td width="103">2 (word)</td>
      <td width="336"><font color="#000099">unknown</font></td>
    </tr>
    <tr>
      <td width="48">0x000a</td>
      <td width="103">2 (word)</td>
      <td width="336">&quot;usage1&quot; -- typically, the count of the item, or the number
        of uses remaining in the item if it is not a &quot;stackable&quot; item.</td>
    </tr>
    <tr>
      <td width="48">0x000a</td>
      <td width="103">2 (word)</td>
      <td width="336">&quot;usage2&quot; -- the second parameter passed when the script
        function &quot;CreateItem&quot; is called. This might only be used for
        wands and other magical items which have multiple uses (i.e. cast
        fireball n times and aganazzar's scorcher m times)</td>
    </tr>
    <tr>
      <td width="48">0x000c</td>
      <td width="103">2 (word)</td>
      <td width="336">&quot;usage3&quot; -- the third parameter passed when the script
        function &quot;CreateItem&quot; is called. Presumably like 'usage2'.</td>
    </tr>
    <tr>
      <td width="48">0x000e</td>
      <td width="103">4 (dword)</td>
      <td width="336">Flags:
        <ul>
          <li>bit 0: identified
          <li>other bits: to fill in later</li>
        </ul>
      </td>
    </tr>
  </tbody>
</table>
<h4 class="reshead"><a name="formCREV1_0_ItemSlots">CRE V1.0 Item Slots</a></h4>
<p>This is an array keeping track of which items are located in each particular
location in the CRE's inventory. There are 38 slots, and they are NOT the same
as the order specified in specified in SLOTS.IDS. The actual order is:&nbsp;</p>
<ul>
  <li>Helmet&nbsp;</li>
  <li>Armor</li>
  <li>Shield</li>
  <li>Gloves</li>
  <li>L.Ring</li>
  <li>R.Ring</li>
  <li>Amulet</li>
  <li>Belt</li>
  <li>Boots</li>
  <li>Weapon 1</li>
  <li>Weapon 2</li>
  <li>Weapon 3</li>
  <li>Weapon 4</li>
  <li>Quiver 1</li>
  <li>Quiver 2</li>
  <li>Quiver 3</li>
  <li>Cloak</li>
  <li>Quick item 1</li>
  <li>Quick
item 2</li>
  <li>Quick item 3</li>
  <li>and 16(?) inventory slots. Each entry in here will either
be 0xffff, meaning &quot;empty&quot;, or it will be an index into the <a href="#formCREV1_0_Item">Items
table</a>.</li>
</ul>
<h2 class="frmhead"><a name="formCREV1_2">CRE V1.2</a></h2>
<p>Overall structure</p>
<ul>
  <li><a href="#formCREV1_2_Header">Header</a>
  <li><a href="#formCREV1_2_KnownSpell">Known spells section</a>
  <li><a href="#formCREV1_2_MemSpellInfo">Spell memorization info</a>
  <li><a href="#formCREV1_2_MemSpell">Memorized spells section</a>
  <li><a href="#formCREV1_2_Item">Items section</a>
  <li><a href="#formCREV1_2_ItemSlots">&quot;Item slots&quot;</a></li>
</ul>
<h4 class="reshead"><a name="formCREV1_2_Header">CRE V1.2 Header</a></h4>
<table border="1" class="tbl3" width="516">
  <colgroup>
    <col class="col1" width="5%">
    <col class="col2" width="12%">
    <col class="col3" width="*">
  </colgroup>
  <thead>
    <tr>
      <th width="48">Offset</th>
      <th width="120">Size (data type)</th>
      <th width="326">Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td width="48">0x0000</td>
      <td width="120">4 (char array)</td>
      <td width="326">Signature ('CRE ')</td>
    </tr>
    <tr>
      <td width="48">0x0004</td>
      <td width="120">4 (char array)</td>
      <td width="326">Version ('V1.2')</td>
    </tr>
    <tr>
      <td width="48">0x0008</td>
      <td width="120">4 (Strref)</td>
      <td width="326">Long Creature name (or possibly identified name? Perhaps the lore
        skill was intended to function upon monsters as well?</td>
    </tr>
    <tr>
      <td width="48">0x000c</td>
      <td width="120">4 (Strref)</td>
      <td width="326">Short Creature name (or unidentified name? See note above.)</td>
    </tr>
    <tr>
      <td width="48">0x0010</td>
      <td width="120">1 (byte)</td>
      <td width="326"><font color="#000099">Unknown - probably it is as in case
        of BG this offset determine whether creature is multiclass or dualclass
        . I (Manveru)&nbsp; haven't got PT , so I cannot determine that.</font></td>
    </tr>
    <tr>
      <td width="48">0x0011</td>
      <td width="120">1 (byte)</td>
      <td width="326">Disallows exportation and customization of all but the
        script if this byte is set to anything but 08</td>
    </tr>
    <tr>
      <td width="48">0x0012</td>
      <td width="120">2 (word)</td>
      <td width="326"><font color="#000099">Unknown</font></td>
    </tr>
    <tr>
      <td width="48">0x0014</td>
      <td width="120">4 (dword)</td>
      <td width="326">experience value (i.e. value in XP for killing this creature)</td>
    </tr>
    <tr>
      <td width="48">0x0018</td>
      <td width="120">4 (dword)</td>
      <td width="326">experience</td>
    </tr>
    <tr>
      <td width="48">0x001c</td>
      <td width="120">4 (dword)</td>
      <td width="326">gold</td>
    </tr>
    <tr>
      <td width="48">0x0020</td>
      <td width="120">4 (dword)</td>
      <td width="326">(permanent) status flags (as per STATE.IDS). This varies from game to
        game, but includes such things as invisibility, charmed, silenced, and
        draw-upon-holy-might.</td>
    </tr>
    <tr>
      <td width="48">0x0024</td>
      <td width="120">2 (word)</td>
      <td width="326">Current hit points</td>
    </tr>
    <tr>
      <td width="48">0x0026</td>
      <td width="120">2 (word)</td>
      <td width="326">Max hit points</td>
    </tr>
    <tr>
      <td width="48">0x0028</td>
      <td width="120">2 (word)</td>
      <td width="326">Animation ID (as from ANIMATE.IDS). Note that while there is some
        structure to the ordering of these, it is actually worked out via a sort
        of tangled routine which sorts into major categories based on the high
        nybble. In Planescape: Torment, the way <a href="BAMformat.htm"><font color="#FF0000"> BAM</font></a> files (for display on the
        overland screen) are mapped to CRE files is via this field; the resource
        names which are mapped to by ANIMATE ids are (I believe) hard-coded in
        the executable. According to <a href="http://infexp.sourceforge.net/">Dmitry
        Jemerov</a>, the <a href="BAMformat.htm"><font color="#FF0000"> BAM</font></a> file mapped to a CRE resource may be handled by the
        file <code>RESDATA.INI</code>.</td>
    </tr>
    <tr class="unk">
      <td width="48">0x002a</td>
      <td width="120">2 (word)</td>
      <td width="326"><font color="#000099">unknown</font></td>
    </tr>
    <tr>
      <td width="48">0x002c</td>
      <td width="120">1 (byte)</td>
      <td width="326">metal color index</td>
    </tr>
    <tr>
      <td width="48">0x002d</td>
      <td width="120">1 (byte)</td>
      <td width="326">minor color index</td>
    </tr>
    <tr>
      <td width="48">0x002e</td>
      <td width="120">1 (byte)</td>
      <td width="326">major color index</td>
    </tr>
    <tr>
      <td width="48">0x002f</td>
      <td width="120">1 (byte)</td>
      <td width="326">skin color index</td>
    </tr>
    <tr>
      <td width="48">0x0030</td>
      <td width="120">1 (byte)</td>
      <td width="326">leather color index</td>
    </tr>
    <tr>
      <td width="48">0x0031</td>
      <td width="120">1 (byte)</td>
      <td width="326">armor color index</td>
    </tr>
    <tr>
      <td width="48">0x0032</td>
      <td width="120">1 (byte)</td>
      <td width="326">hair color index</td>
    </tr>
    <tr class="unk">
      <td width="48">0x0033</td>
      <td width="120">1 (byte)</td>
      <td width="326"><font color="#000099">unknown</font></td>
    </tr>
    <tr>
      <td width="48">0x0034</td>
      <td width="120">8 (resref)</td>
      <td width="326">resource name for the 'small portrait' associated with this CRE, if
        any (i.e. small portrait as customizable for each character in the game
        options)</td>
    </tr>
    <tr>
      <td width="48">0x003c</td>
      <td width="120">8 (resref)</td>
      <td width="326">resource name for the 'large portrait' associated with this CRE, if
        any (i.e. large portrait as customizable for each character in the game
        options)</td>
    </tr>
    <tr>
      <td width="48">0x0044</td>
      <td width="120">1 (byte)</td>
      <td width="326">reputation (minimum value: 0)</td>
    </tr>
    <tr class="unk">
      <td width="48">0x0045</td>
      <td width="120">1 (byte)</td>
      <td width="326"><font color="#000099">unknown (Hide In Shadows (Kit/Race/Dex
        Bonuses are separate from these values)) ?</font></td>
    </tr>
    <tr>
      <td width="48">0x0046</td>
      <td width="120">2 (signed word)</td>
      <td width="326">armor class (natural?)</td>
    </tr>
    <tr>
      <td width="48">0x0048</td>
      <td width="120">2 (signed word)</td>
      <td width="326">armor class (effective?)</td>
    </tr>
    <tr>
      <td width="48">0x004a</td>
      <td width="120">2 (signed word)</td>
      <td width="326">armor class (crushing attacks modifier)</td>
    </tr>
    <tr>
      <td width="48">0x004c</td>
      <td width="120">2 (signed word)</td>
      <td width="326">armor class (missile attacks modifier)</td>
    </tr>
    <tr>
      <td width="48">0x004e</td>
      <td width="120">2 (signed word)</td>
      <td width="326">armor class (piercing attacks modifier)</td>
    </tr>
    <tr>
      <td width="48">0x0050</td>
      <td width="120">2 (signed word)</td>
      <td width="326">armor class (slashing attacks modifier)</td>
    </tr>
    <tr>
      <td width="48">0x0052</td>
      <td width="120">1 (byte)</td>
      <td width="326">THAC0 (1-25)</td>
    </tr>
    <tr>
      <td width="48">0x0053</td>
      <td width="120">1 (byte)</td>
      <td width="326">number of attacks (0-10)</td>
    </tr>
    <tr>
      <td width="48">0x0054</td>
      <td width="120">1 (byte)</td>
      <td width="326">save versus death (0-20)</td>
    </tr>
    <tr>
      <td width="48">0x0055</td>
      <td width="120">1 (byte)</td>
      <td width="326">save versus wands (0-20)</td>
    </tr>
    <tr>
      <td width="48">0x0056</td>
      <td width="120">1 (byte)</td>
      <td width="326">save versus poly (0-20)</td>
    </tr>
    <tr>
      <td width="48">0x0057</td>
      <td width="120">1 (byte)</td>
      <td width="326">save versus breath (0-20)</td>
    </tr>
    <tr>
      <td width="48">0x0058</td>
      <td width="120">1 (byte)</td>
      <td width="326">save versus spell (0-20)</td>
    </tr>
    <tr>
      <td width="48">0x0059</td>
      <td width="120">1 (byte)</td>
      <td width="326">resist fire (0-100)</td>
    </tr>
    <tr>
      <td width="48">0x005a</td>
      <td width="120">1 (byte)</td>
      <td width="326">resist cold (0-100)</td>
    </tr>
    <tr>
      <td width="48">0x005b</td>
      <td width="120">1 (byte)</td>
      <td width="326">resist electricity (0-100)</td>
    </tr>
    <tr>
      <td width="48">0x005c</td>
      <td width="120">1 (byte)</td>
      <td width="326">resist acid (0-100)</td>
    </tr>
    <tr>
      <td width="48">0x005d</td>
      <td width="120">1 (byte)</td>
      <td width="326">resist magic (0-100)</td>
    </tr>
    <tr>
      <td width="48">0x005e</td>
      <td width="120">1 (byte)</td>
      <td width="326">resist magic fire (0-100)</td>
    </tr>
    <tr>
      <td width="48">0x005f</td>
      <td width="120">1 (byte)</td>
      <td width="326">resist magic cold (0-100)</td>
    </tr>
    <tr>
      <td width="48">0x0060</td>
      <td width="120">1 (byte)</td>
      <td width="326">resist slashing (0-100)</td>
    </tr>
    <tr>
      <td width="48">0x0061</td>
      <td width="120">1 (byte)</td>
      <td width="326">resist crushing (0-100)</td>
    </tr>
    <tr>
      <td width="48">0x0062</td>
      <td width="120">1 (byte)</td>
      <td width="326">resist piercing (0-100)</td>
    </tr>
    <tr>
      <td width="48">0x0063</td>
      <td width="120">1 (byte)</td>
      <td width="326">resist missile (0-100)</td>
    </tr>
    <tr class="unk">
      <td width="48">0x0064</td>
      <td width="120">1 (byte)</td>
      <td width="326"><font color="#000099">unknown</font></td>
    </tr>
    <tr class="unk">
      <td width="48">0x0065</td>
      <td width="120">1 (byte)</td>
      <td width="326"><font color="#000099">unknown</font></td>
    </tr>
    <tr>
      <td width="48">0x0066</td>
      <td width="120">1 (byte)</td>
      <td width="326">lore skill (0-100)</td>
    </tr>
    <tr>
      <td width="48">0x0067</td>
      <td width="120">1 (byte)</td>
      <td width="326">lockpicking skill (minimum value: 0)</td>
    </tr>
    <tr>
      <td width="48">0x0068</td>
      <td width="120">1 (byte)</td>
      <td width="326">stealth skill (minimum value: 0)</td>
    </tr>
    <tr>
      <td width="48">0x0069</td>
      <td width="120">1 (byte)</td>
      <td width="326">traps skill (minimum value: 0)</td>
    </tr>
    <tr>
      <td width="48">0x006a</td>
      <td width="120">1 (byte)</td>
      <td width="326">pick-pockets skill (minimum value: 0)</td>
    </tr>
    <tr>
      <td width="48">0x006b</td>
      <td width="120">1 (byte)</td>
      <td width="326">fatigue (0-100)</td>
    </tr>
    <tr>
      <td width="48">0x006c</td>
      <td width="120">1 (byte)</td>
      <td width="326">intoxification (0-100)</td>
    </tr>
    <tr>
      <td width="48">0x006d</td>
      <td width="120">1 (byte)</td>
      <td width="326">luck</td>
    </tr>
    <tr>
      <td width="48">0x006e</td>
      <td width="120">1 (byte)</td>
      <td width="326">Fist proficiency (It is rumored that proficiencies are packed in 3-bit
        chunks for the primary and secondary classes -- i.e. primary class
        proficiency is the low 3 bits, secondary is the middle 3 bits. This may
        be true.)</td>
    </tr>
    <tr>
      <td width="48">0x006f</td>
      <td width="120">1 (byte)</td>
      <td width="326">Edged weapons proficiency (It is rumored that proficiencies are packed
        in 3-bit chunks for the primary and secondary classes -- i.e. primary
        class proficiency is the low 3 bits, secondary is the middle 3 bits.
        This may be true.)</td>
    </tr>
    <tr>
      <td width="48">0x0070</td>
      <td width="120">1 (byte)</td>
      <td width="326">Hammer proficiency (It is rumored that proficiencies are packed in
        3-bit chunks for the primary and secondary classes -- i.e. primary class
        proficiency is the low 3 bits, secondary is the middle 3 bits. This may
        be true.)</td>
    </tr>
    <tr>
      <td width="48">0x0071</td>
      <td width="120">1 (byte)</td>
      <td width="326">Axe proficiency (It is rumored that proficiencies are packed in 3-bit
        chunks for the primary and secondary classes -- i.e. primary class
        proficiency is the low 3 bits, secondary is the middle 3 bits. This may
        be true.)</td>
    </tr>
    <tr>
      <td width="48">0x0072</td>
      <td width="120">1 (byte)</td>
      <td width="326">Club weapons proficiency (It is rumored that proficiencies are packed
        in 3-bit chunks for the primary and secondary classes -- i.e. primary
        class proficiency is the low 3 bits, secondary is the middle 3 bits.
        This may be true.)</td>
    </tr>
    <tr>
      <td width="48">0x0073</td>
      <td width="120">1 (byte)</td>
      <td width="326">Bow weapons proficiency (It is rumored that proficiencies are packed
        in 3-bit chunks for the primary and secondary classes -- i.e. primary
        class proficiency is the low 3 bits, secondary is the middle 3 bits.
        This may be true.)</td>
    </tr>
    <tr>
      <td width="48">0x0074</td>
      <td width="120">1 (byte)</td>
      <td width="326">Probably unused (BG has 8 proficiency types, PT has only 6)</td>
    </tr>
    <tr>
      <td width="48">0x0075</td>
      <td width="120">1 (byte)</td>
      <td width="326">Probably unused (BG has 8 proficiency types, PT has only 6)</td>
    </tr>
    <tr class="unk">
      <td width="48">0x0076</td>
      <td width="120">13 (bytes)</td>
      <td width="326"><font color="#000099">unknown</font></td>
    </tr>
    <tr>
      <td width="48">0x0083</td>
      <td width="120">1 (byte)</td>
      <td width="326">tracking skill (0-100)</td>
    </tr>
    <tr class="unk">
      <td width="48">0x0084</td>
      <td width="120">32 (bytes)</td>
      <td width="326"><font color="#000099">unknown</font></td>
    </tr>
    <tr>
      <td width="48">0x00a4</td>
      <td width="120">4*100 (Strref*100)</td>
      <td width="326"><b>Strrefs which relate to the character. Most of them relate to the
        sound-set. In the file SOUNDOFF.IDS, there are several numbers. These
        indicate indices into this array, and they match various occurrences to
        Strrefs.</b> For instance, SOUNDOFF.IDS has &quot;SELECT_RARE&quot;, at
        index 35. SELECT_RARE actually takes up 4 entries -- the next numbered
        entry is at 39. So the 35th through the 39th entries in this are the
        &quot;select rare&quot; entries, which, it turns out, correspond to the
        amusing sound-bites you get if you repeatedly click on a character. <b> A
        character's biography appears to be stored in the 74th entry in this
        array. </b> What any other entries may be used for is unknown, although I
        suspect it varies from character to character, judging from the label
        &quot;MISC&quot; that is applied around entry #58. Presumably the rest
        of the entries are just for miscellaneous purposes which only apply to
        certain characters.</td>
    </tr>
    <tr>
      <td width="48">0x0234</td>
      <td width="120">1 (byte)</td>
      <td width="326">Highest attained level in primary class (0-100)</td>
    </tr>
    <tr>
      <td width="48">0x0235</td>
      <td width="120">1 (byte)</td>
      <td width="326">Highest attained level in secondary class (0-100)</td>
    </tr>
    <tr>
      <td width="48">0x0236</td>
      <td width="120">1 (byte)</td>
      <td width="326">Highest attained level in tertiary class (0-100) 0 is Dual
        Classed cre(if 0x0235 is non-zero, &gt;0 is multi-classed)</td>
    </tr>
    <tr class="unk">
      <td width="48">0x0237</td>
      <td width="120">1 (byte)</td>
      <td width="326">1 is Dual classed, but not reached first classlevel +1
        (disabled first class) yet, 2 is when the creature has.</td>
    </tr>
    <tr>
      <td width="48">0x0238</td>
      <td width="120">1 (byte)</td>
      <td width="326">Strength (1-25)</td>
    </tr>
    <tr>
      <td width="48">0x0239</td>
      <td width="120">1 (byte)</td>
      <td width="326">Strength % Bonus (0-100)</td>
    </tr>
    <tr>
      <td width="48">0x023a</td>
      <td width="120">1 (byte)</td>
      <td width="326">Intelligence (1-25)</td>
    </tr>
    <tr>
      <td width="48">0x023b</td>
      <td width="120">1 (byte)</td>
      <td width="326">Wisdom (1-25)</td>
    </tr>
    <tr>
      <td width="48">0x023c</td>
      <td width="120">1 (byte)</td>
      <td width="326">Dexterity (1-25)</td>
    </tr>
    <tr>
      <td width="48">0x023d</td>
      <td width="120">1 (byte)</td>
      <td width="326">Constitution (1-25)</td>
    </tr>
    <tr>
      <td width="48">0x023e</td>
      <td width="120">1 (byte)</td>
      <td width="326">Charisma (1-25)</td>
    </tr>
    <tr>
      <td width="48">0x023f</td>
      <td width="120">1 (byte)</td>
      <td width="326">Morale</td>
    </tr>
    <tr>
      <td width="48">0x0240</td>
      <td width="120">1 (byte)</td>
      <td width="326">Morale break</td>
    </tr>
    <tr>
      <td width="48">0x0241</td>
      <td width="120">1 (byte)</td>
      <td width="326">Racial enemy (see RACE.IDS)</td>
    </tr>
    <tr class="upd">
      <td width="48">0x0242</td>
      <td width="120">1 (byte)</td>
      <td width="326">Morale Recovery Time</td>
    </tr>
    <tr class="unk">
      <td width="48">0x0243</td>
      <td width="120">3 (bytes)</td>
      <td width="326"><font color="#000099">unknown</font></td>
    </tr>
    <tr>
      <td width="48">0x0246</td>
      <td width="120">2 (word)</td>
      <td width="326"><font color="#000099">unknown</font></td>
    </tr>
    <tr>
      <td width="48">0x0246</td>
      <td width="120">2 (word)</td>
      <td width="326">mage type (see MAGETYPE.IDS)</td>
    </tr>
    <tr>
      <td width="48">0x0248</td>
      <td width="120">8 (resref)</td>
      <td width="326">creature <a href="BCSformat.htm"><font color="#FF0000">script</font></a>
        (&quot;override&quot; script?)</td>
    </tr>
    <tr>
      <td width="48">0x0250</td>
      <td width="120">8 (resref)</td>
      <td width="326">creature <a href="BCSformat.htm"><font color="#FF0000">script</font></a>
        (&quot;class&quot; script?)</td>
    </tr>
    <tr>
      <td width="48">0x0258</td>
      <td width="120">8 (resref)</td>
      <td width="326">creature <a href="BCSformat.htm"><font color="#FF0000">script</font></a>
        (&quot;race&quot; script?)</td>
    </tr>
    <tr>
      <td width="48">0x0260</td>
      <td width="120">8 (resref)</td>
      <td width="326">creature <a href="BCSformat.htm"><font color="#FF0000">script</font></a>
        (&quot;general&quot; script?)</td>
    </tr>
    <tr>
      <td width="48">0x0268</td>
      <td width="120">8 (resref)</td>
      <td width="326">creature <a href="BCSformat.htm"><font color="#FF0000">script</font></a>
        (&quot;default&quot; script?)</td>
    </tr>
    <tr class="unk">
      <td width="48">0x0270</td>
      <td width="120">76 (bytes)</td>
      <td width="326"><font color="#000099">TODO/UNKNOWN</font></td>
    </tr>
    <tr class="unc">
      <td width="48">0x02bc</td>
      <td width="120">32 (char array)</td>
      <td width="326"><font color="#000099">Name of this race?</font></td>
    </tr>
    <tr class="unk">
      <td width="48">0x02dc</td>
      <td width="120">53 (bytes)</td>
      <td width="326"><font color="#000099">TODO/UNKNOWN</font></td>
    </tr>
    <tr class="unc">
      <td width="48">0x0311</td>
      <td width="120">1 (byte)</td>
      <td width="326"><font color="#000099">Unknown, but this field is almost always the same as the
        &quot;Race&quot; field which occurs 5 bytes later</font></td>
    </tr>
    <tr>
      <td width="48">0x0312</td>
      <td width="120">1 (byte)</td>
      <td width="326">&quot;Team&quot; type (see TEAM.IDS). This field and the next several
        require some explanation. It seems probable, due to the similar layout
        of these fields, that this is actually an object identifier. For
        reference, see the script compiler manual, but in short, it means that
        it has EA, GENERAL, RACE, CLASS, and SPECIFIC, among other things. This
        data could be used to explain the other unused fields. The only
        difficulty with this theory is that the byte which is currently listed
        as &quot;gender&quot; would normally be 'special case' according to the
        script compiler manual. On the other hand, the script compiler manual is
        poorly written and inaccurate in places, probably the result of a quick
        edit of an internal specification which was hacked into a public
        document.</td>
    </tr>
    <tr>
      <td width="48">0x0313</td>
      <td width="120">1 (byte)</td>
      <td width="326">&quot;Faction&quot; type (see FACTION.IDS).</td>
    </tr>
    <tr>
      <td width="48">0x0314</td>
      <td width="120">1 (byte)</td>
      <td width="326">&quot;Enemy-Ally&quot; type (see EA.IDS).</td>
    </tr>
    <tr>
      <td width="48">0x0315</td>
      <td width="120">1 (byte)</td>
      <td width="326">&quot;General&quot; type (see GENERAL.IDS).</td>
    </tr>
    <tr>
      <td width="48">0x0316</td>
      <td width="120">1 (byte)</td>
      <td width="326">&quot;Race&quot; type (see RACE.IDS).</td>
    </tr>
    <tr>
      <td width="48">0x0317</td>
      <td width="120">1 (byte)</td>
      <td width="326">&quot;Class&quot; type (see CLASS.IDS).</td>
    </tr>
    <tr>
      <td width="48">0x0318</td>
      <td width="120">1 (byte)</td>
      <td width="326">&quot;Specific&quot; type (see SPECIFIC.IDS).</td>
    </tr>
    <tr>
      <td width="48">0x0319</td>
      <td width="120">1 (byte)</td>
      <td width="326">&quot;Gender&quot; type (see GENDER.IDS).</td>
    </tr>
    <tr>
      <td width="48">0x031a</td>
      <td width="120">5 (bytes)</td>
      <td width="326">unknown; however, see description at &quot;Team&quot; type byte above.
        If this is, in fact, an object id, then this here would be the 5 bytes
        which are used for functional specification of an object (see OBJECT.IDS).
        Functional specification of an object involves things like <code>LastAttackerOf(Myself)</code>
        or <code>ProtectorOf(LastTalkedToBy(Protagonist))</code>.</td>
    </tr>
    <tr>
      <td width="48">0x031f</td>
      <td width="120">1 (byte)</td>
      <td width="326">&quot;Alignment&quot; type (see ALIGNMEN.IDS.</td>
    </tr>
    <tr class="unk">
      <td width="48">0x0320</td>
      <td width="120">2 (word)</td>
      <td width="326"><font color="#000099">unknown. This field and the next appear to hold two 16-bit words, both
        of which are usually 0xffff.</font></td>
    </tr>
    <tr class="unk">
      <td width="48">0x0322</td>
      <td width="120">2 (word)</td>
      <td width="326"><font color="#000099">unknown</font></td>
    </tr>
    <tr>
      <td width="48">0x0324</td>
      <td width="120">32 (char array)</td>
      <td width="326">This field determines the name of the &quot;death variable&quot; to
        set when this creature has been killed.</td>
    </tr>
    <tr>
      <td width="48">0x0344</td>
      <td width="120">4 (dword)</td>
      <td width="326"><a href="#formCREV1_2_KnownSpell">Known spells</a> offset</td>
    </tr>
    <tr>
      <td width="48">0x0348</td>
      <td width="120">4 (dword)</td>
      <td width="326"><a href="#formCREV1_2_KnownSpell">Known spells</a> count</td>
    </tr>
    <tr>
      <td width="48">0x034c</td>
      <td width="120">4 (dword)</td>
      <td width="326"><a href="#formCREV1_2_MemSpellInfo">Spell memorization info</a> offset</td>
    </tr>
    <tr>
      <td width="48">0x0350</td>
      <td width="120">4 (dword)</td>
      <td width="326"><a href="#formCREV1_2_MemSpellInfo">Spell memorization info</a>
        entries count</td>
    </tr>
    <tr>
      <td width="48">0x0354</td>
      <td width="120">4 (dword)</td>
      <td width="326"><a href="#formCREV1_2_MemSpell">Memorized spells</a> offset</td>
    </tr>
    <tr>
      <td width="48">0x0358</td>
      <td width="120">4 (dword)</td>
      <td width="326"><a href="#formCREV1_2_MemSpell">Memorized spells</a> count</td>
    </tr>
    <tr>
      <td width="48">0x035c</td>
      <td width="120">4 (dword)</td>
      <td width="326"><a href="#formCREV1_2_ItemSlot">Item slots</a> offset</td>
    </tr>
    <tr>
      <td width="48">0x0360</td>
      <td width="120">4 (dword)</td>
      <td width="326"><a href="#formCREV1_2_Item">Items </a>offset</td>
    </tr>
    <tr>
      <td width="48">0x0364</td>
      <td width="120">4 (dword)</td>
      <td width="326"><a href="#formCREV1_2_Item">Items </a>count</td>
    </tr>
    <tr>
      <td width="48">0x0368</td>
      <td width="120">4 (dword)</td>
      <td width="326"><a href="../Effects/effects.htm"><font color="#FF0000">effects</font></a>
        offset (i.e. effects currently affecting character)</td>
    </tr>
    <tr>
      <td width="48">0x036c</td>
      <td width="120">4 (dword)</td>
      <td width="326"><a href="../Effects/effects.htm"><font color="#FF0000">effects</font></a>
        count (i.e. effects currently affecting character)</td>
    </tr>
    <tr>
      <td width="48">0x0370</td>
      <td width="120">8 (resref)</td>
      <td width="326">associated <a href="DLGformat.htm"><font color="#FF0000">dialog
        file</font></a>. (A CRE can have a default <a href="DLGformat.htm"><font color="#FF0000">DLG
        file</font></a> associated. This can be overridden in the <a href="AreFormat.htm"><font color="#FF0000">ARE
        file</font></a>, and by a <a href="BCSformat.htm"><font color="#FF0000">script</font></a>).</td>
    </tr>
  </tbody>
</table>
<h4 class="reshead"><a name="formCREV1_2_KnownSpell">CRE V1.2 Known Spells</a></h4>
<p>This section details which spells the creature knows, and it consists of an
array of entries formatted as follows.</p>
<table border="1" class="tbl3" width="509">
  <colgroup>
    <col class="col1" width="5%">
    <col class="col2" width="12%">
    <col class="col3" width="*">
  </colgroup>
  <thead>
    <tr>
      <th width="48">Offset</th>
      <th width="103">Size (data type)</th>
      <th width="336">Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td width="48">0x0000</td>
      <td width="103">8 (resref)</td>
      <td width="336">Resource name of the <a href="SPLformat.htm"><font color="#FF0000">SPL
        file</font></a> holding the particular spell</td>
    </tr>
    <tr>
      <td width="48">0x0008</td>
      <td width="103">2 (word)</td>
      <td width="336">Level of the spell (less 1)</td>
    </tr>
    <tr>
      <td width="48">0x000a</td>
      <td width="103">2 (word)</td>
      <td width="336">Type of the spell (0=Priest, 1=Wizard, 2=Innate, other values? This
        doesn't appear in any of the IDS files, to my knowledge)</td>
    </tr>
  </tbody>
</table>
<h4 class="reshead"><a name="formCREV1_2_MemSpellInfo">CRE V1.2 Spell
Memorization Info</a></h4>
<p>This section details how many spells the creature can memorize, and how many
it has memorized. It consists of an array of entries formatted as follows.</p>
<table border="1" class="tbl3" width="509">
  <colgroup>
    <col class="col1" width="5%">
    <col class="col2" width="12%">
    <col class="col3" width="*">
  </colgroup>
  <thead>
    <tr>
      <th width="48">Offset</th>
      <th width="103">Size (data type)</th>
      <th width="336">Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td width="48">0x0000</td>
      <td width="103">2 (word)</td>
      <td width="336">Spell level (less 1)</td>
    </tr>
    <tr>
      <td width="48">0x0002</td>
      <td width="103">2 (word)</td>
      <td width="336">Number of spells memorizable</td>
    </tr>
    <tr>
      <td width="48">0x0004</td>
      <td width="103">2 (word)</td>
      <td width="336">Number of spells memorizable (how does this differ from the field at
        2?)</td>
    </tr>
    <tr>
      <td width="48">0x0006</td>
      <td width="103">2 (word)</td>
      <td width="336">Spell type (as above in <a href="#formCREV1_2_KnownSpell">Known Spells</a>,
        0=Priest, 1=Wizard, 2=Innate, other values are either unknown or
        invalid).</td>
    </tr>
    <tr>
      <td width="48">0x0008</td>
      <td width="103">4 (dword)</td>
      <td width="336">Index into <a href="#formCREV1_2_MemSpell">memorized spells</a> array
        of first memorized spell of this type in this level.</td>
    </tr>
    <tr>
      <td width="48">0x000c</td>
      <td width="103">4 (dword)</td>
      <td width="336">Count of memorized spell entries in <a href="#formCREV1_2_MemSpell">memorized
        spells</a> array of memorized spells of this type in this level.</td>
    </tr>
  </tbody>
</table>
<h4 class="reshead"><a name="formCREV1_2_MemSpell">CRE V1.2 Memorized Spells
Table</a></h4>
<p>This section details which spells the character has memorized. It consists of
an array of entries formatted as follows.</p>
<table border="1" class="tbl3" width="509">
  <colgroup>
    <col class="col1" width="5%">
    <col class="col2" width="12%">
    <col class="col3" width="*">
  </colgroup>
  <thead>
    <tr>
      <th width="48">Offset</th>
      <th width="103">Size (data type)</th>
      <th width="336">Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td width="48">0x0000</td>
      <td width="103">8 (resref)</td>
      <td width="336">Resource name of the <a href="SPLformat.htm"><font color="#FF0000">SPL
        file</font></a> holding the particular memorized spell</td>
    </tr>
    <tr class="unc">
      <td width="48">0x0008</td>
      <td width="103">4 (dword)</td>
      <td width="336"><font color="#000099">Unknown; likely, it is set to 1 when the spell is memorized, and set
        to 0 once the spell has been cast. In this way, it keeps track of which
        spells are scheduled to be memorized when the CRE next sleeps.</font></td>
    </tr>
  </tbody>
</table>
<h4 class="reshead"><a name="formCREV1_2_Item">CRE V1.2 Items Table</a></h4>
<p>This section details which items the character has. It consists of an array
of entries formatted as follows.</p>
<table border="1" class="tbl3" width="509">
  <colgroup>
    <col class="col1" width="5%">
    <col class="col2" width="12%">
    <col class="col3" width="*">
  </colgroup>
  <thead>
    <tr>
      <th width="48">Offset</th>
      <th width="103">Size (data type)</th>
      <th width="336">Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td width="48">0x0000</td>
      <td width="103">8 (resref)</td>
      <td width="336">Resource name of the <a href="ITMformat.htm"><font color="#FF0000">ITM
        file</font></a> holding the particular item</td>
    </tr>
    <tr class="unk">
      <td width="48">0x0008</td>
      <td width="103">2 (word)</td>
      <td width="336"><font color="#000099">unknown</font></td>
    </tr>
    <tr>
      <td width="48">0x000a</td>
      <td width="103">2 (word)</td>
      <td width="336">&quot;usage1&quot; -- typically, the count of the item, or the number
        of uses remaining in the item if it is not a &quot;stackable&quot; item.</td>
    </tr>
    <tr>
      <td width="48">0x000a</td>
      <td width="103">2 (word)</td>
      <td width="336">&quot;usage2&quot; -- the second parameter passed when the script
        function &quot;CreateItem&quot; is called. This might only be used for
        wands and other magical items which have multiple uses (i.e. cast
        fireball n times and aganazzar's scorcher m times)</td>
    </tr>
    <tr>
      <td width="48">0x000c</td>
      <td width="103">2 (word)</td>
      <td width="336">&quot;usage3&quot; -- the third parameter passed when the script
        function &quot;CreateItem&quot; is called. Presumably like 'usage2'.</td>
    </tr>
    <tr>
      <td width="48">0x0010</td>
      <td width="103">4 (dword)</td>
      <td width="336">Flags:
        <ul>
          <li>bit 0: identified
          <li>other bits: to fill in later</li>
        </ul>
      </td>
    </tr>
  </tbody>
</table>
<h4 class="reshead"><a name="formCREV1_2_ItemSlots">CRE V1.2 Item Slots</a></h4>
<p>This is an array keeping track of which items are located in each particular
location in the CRE's inventory. There are 38 slots, and they are NOT the same
as the order specified in specified in SLOTS.IDS. I will update with the actual
order ASAP. Each entry in here will either be 0xffff, meaning &quot;empty&quot;,
or it will be an index into the <a href="#formCREV1_2_Item">Items table</a>.</p>
<h2 class="frmhead"><a name="formCREV9_0">CRE V9.0</a></h2>
<p>Overall structure</p>
<ul>
  <li><a href="#formCREV9_0_Header">Header</a>
  <li><a href="#formCREV9_0_KnownSpell">Known spells section</a>
  <li><a href="#formCREV9_0_MemSpellInfo">Spell memorization info</a>
  <li><a href="#formCREV9_0_MemSpell">Memorized spells section</a>
  <li><a href="#formCREV9_0_Item">Items section</a>
  <li><a href="#formCREV9_0_ItemSlots">&quot;Item slots&quot;</a></li>
</ul>
<h4 class="reshead"><a name="formCREV9_0_Header">CRE V9.0 Header</a></h4>
<table border="1" class="tbl3" width="516">
  <colgroup>
    <col class="col1" width="5%">
    <col class="col2" width="12%">
    <col class="col3" width="*">
  </colgroup>
  <thead>
    <tr>
      <th width="48">Offset</th>
      <th width="120">Size (data type)</th>
      <th width="326">Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td width="48">0x0000</td>
      <td width="120">4 (char array)</td>
      <td width="326">Signature ('CRE ')</td>
    </tr>
    <tr>
      <td width="48">0x0004</td>
      <td width="120">4 (char array)</td>
      <td width="326">Version ('V9.0')</td>
    </tr>
    <tr>
      <td width="48">0x0008</td>
      <td width="120">4 (Strref)</td>
      <td width="326">Long Creature name</td>
    </tr>
    <tr>
      <td width="48">0x000c</td>
      <td width="120">4 (Strref)</td>
      <td width="326">Short Creature name (used for tooltips)</td>
    </tr>
    <tr>
      <td width="48">0x0010</td>
      <td width="120">1 (byte)</td>
      <td width="326">This offset determine whether creature is multiclass or
        dualclass.&nbsp;</td>
    </tr>
    <tr>
      <td width="48">0x0011</td>
      <td width="120">1 (byte)</td>
      <td width="326">Disallows exportation and customization of all but the
        script if this byte is set to anything but 08</td>
    </tr>
    <tr>
      <td width="48">0x0012</td>
      <td width="120">2 (word)</td>
      <td width="326"><font color="#000099">Unknown</font></td>
    </tr>
    <tr>
      <td width="48">0x0014</td>
      <td width="120">4 (dword)</td>
      <td width="326">experience value (i.e. value in XP for killing this creature)</td>
    </tr>
    <tr>
      <td width="48">0x0018</td>
      <td width="120">4 (dword)</td>
      <td width="326">experience</td>
    </tr>
    <tr>
      <td width="48">0x001c</td>
      <td width="120">4 (dword)</td>
      <td width="326">gold</td>
    </tr>
    <tr>
      <td width="48">0x0020</td>
      <td width="120">4 (dword)</td>
      <td width="326">(permanent) status flags (as per STATE.IDS). This varies from game to
        game, but includes such things as invisibility, charmed, silenced, and
        draw-upon-holy-might.</td>
    </tr>
    <tr>
      <td width="48">0x0024</td>
      <td width="120">2 (word)</td>
      <td width="326">Current hit points</td>
    </tr>
    <tr>
      <td width="48">0x0026</td>
      <td width="120">2 (word)</td>
      <td width="326">Max hit points</td>
    </tr>
    <tr>
      <td width="48">0x0028</td>
      <td width="120">2 (word)</td>
      <td width="326">Animation ID (as from ANIMATE.IDS). Note that while there is some
        structure to the ordering of these, it is actually worked out via a sort
        of tangled routine which sorts into major categories based on the high
        nybble. In Baldur's Gate, the way BAM files (for display on the overland
        screen) are mapped to CRE files is via this field; the resource names
        which are mapped to by ANIMATE ids are hard-coded in the executable.
        Yuck.</td>
    </tr>
    <tr class="unk">
      <td width="48">0x002a</td>
      <td width="120">2 (word)</td>
      <td width="326"><font color="#000099">unknown</font></td>
    </tr>
    <tr>
      <td width="48">0x002c</td>
      <td width="120">1 (byte)</td>
      <td width="326">metal color index</td>
    </tr>
    <tr>
      <td width="48">0x002d</td>
      <td width="120">1 (byte)</td>
      <td width="326">minor color index</td>
    </tr>
    <tr>
      <td width="48">0x002e</td>
      <td width="120">1 (byte)</td>
      <td width="326">major color index</td>
    </tr>
    <tr>
      <td width="48">0x002f</td>
      <td width="120">1 (byte)</td>
      <td width="326">skin color index</td>
    </tr>
    <tr>
      <td width="48">0x0030</td>
      <td width="120">1 (byte)</td>
      <td width="326">leather color index</td>
    </tr>
    <tr>
      <td width="48">0x0031</td>
      <td width="120">1 (byte)</td>
      <td width="326">armor color index</td>
    </tr>
    <tr>
      <td width="48">0x0032</td>
      <td width="120">1 (byte)</td>
      <td width="326">hair color index</td>
    </tr>
    <tr class="upd">
      <td width="48">0x0033</td>
      <td width="120">1 (byte)</td>
      <td width="326">flag: if 0, the effect structures attached to this CRE file are old
        style <a href="../Effects/effects.htm"><font color="#FF0000">effects</font></a>;
        if 1, the effect structures are as in the EFF V2.0 format.</td>
    </tr>
    <tr>
      <td width="48">0x0034</td>
      <td width="120">8 (resref)</td>
      <td width="326">resource name for the 'small portrait' associated with this CRE, if
        any (i.e. small portrait as customizable for each character in the game
        options)</td>
    </tr>
    <tr>
      <td width="48">0x003c</td>
      <td width="120">8 (resref)</td>
      <td width="326">resource name for the 'large portrait' associated with this CRE, if
        any (i.e. large portrait as customizable for each character in the game
        options)</td>
    </tr>
    <tr>
      <td width="48">0x0044</td>
      <td width="120">1 (byte)</td>
      <td width="326">reputation (minimum value: 0)</td>
    </tr>
    <tr class="unk">
      <td width="48">0x0045</td>
      <td width="120">1 (byte)</td>
      <td width="326">Hide In Shadows (Kit/Race/Dex Bonuses are separate from
        these values)</td>
    </tr>
    <tr>
      <td width="48">0x0046</td>
      <td width="120">2 (signed word)</td>
      <td width="326">armor class (natural?)</td>
    </tr>
    <tr>
      <td width="48">0x0048</td>
      <td width="120">2 (signed word)</td>
      <td width="326">armor class (effective?)</td>
    </tr>
    <tr>
      <td width="48">0x004a</td>
      <td width="120">2 (signed word)</td>
      <td width="326">armor class (crushing attacks modifier)</td>
    </tr>
    <tr>
      <td width="48">0x004c</td>
      <td width="120">2 (signed word)</td>
      <td width="326">armor class (missile attacks modifier)</td>
    </tr>
    <tr>
      <td width="48">0x004e</td>
      <td width="120">2 (signed word)</td>
      <td width="326">armor class (piercing attacks modifier)</td>
    </tr>
    <tr>
      <td width="48">0x0050</td>
      <td width="120">2 (signed word)</td>
      <td width="326">armor class (slashing attacks modifier)</td>
    </tr>
    <tr>
      <td width="48">0x0052</td>
      <td width="120">1 (byte)</td>
      <td width="326">THAC0 (1-25)</td>
    </tr>
    <tr>
      <td width="48">0x0053</td>
      <td width="120">1 (byte)</td>
      <td width="326">number of attacks (0-10)</td>
    </tr>
    <tr>
      <td width="48">0x0054</td>
      <td width="120">1 (byte)</td>
      <td width="326">save versus death (0-20)</td>
    </tr>
    <tr>
      <td width="48">0x0055</td>
      <td width="120">1 (byte)</td>
      <td width="326">save versus wands (0-20)</td>
    </tr>
    <tr>
      <td width="48">0x0056</td>
      <td width="120">1 (byte)</td>
      <td width="326">save versus poly (0-20)</td>
    </tr>
    <tr>
      <td width="48">0x0057</td>
      <td width="120">1 (byte)</td>
      <td width="326">save versus breath (0-20)</td>
    </tr>
    <tr>
      <td width="48">0x0058</td>
      <td width="120">1 (byte)</td>
      <td width="326">save versus spell (0-20)</td>
    </tr>
    <tr>
      <td width="48">0x0059</td>
      <td width="120">1 (byte)</td>
      <td width="326">resist fire (0-100)</td>
    </tr>
    <tr>
      <td width="48">0x005a</td>
      <td width="120">1 (byte)</td>
      <td width="326">resist cold (0-100)</td>
    </tr>
    <tr>
      <td width="48">0x005b</td>
      <td width="120">1 (byte)</td>
      <td width="326">resist electricity (0-100)</td>
    </tr>
    <tr>
      <td width="48">0x005c</td>
      <td width="120">1 (byte)</td>
      <td width="326">resist acid (0-100)</td>
    </tr>
    <tr>
      <td width="48">0x005d</td>
      <td width="120">1 (byte)</td>
      <td width="326">resist magic (0-100)</td>
    </tr>
    <tr>
      <td width="48">0x005e</td>
      <td width="120">1 (byte)</td>
      <td width="326">resist magic fire (0-100)</td>
    </tr>
    <tr>
      <td width="48">0x005f</td>
      <td width="120">1 (byte)</td>
      <td width="326">resist magic cold (0-100)</td>
    </tr>
    <tr>
      <td width="48">0x0060</td>
      <td width="120">1 (byte)</td>
      <td width="326">resist slashing (0-100)</td>
    </tr>
    <tr>
      <td width="48">0x0061</td>
      <td width="120">1 (byte)</td>
      <td width="326">resist crushing (0-100)</td>
    </tr>
    <tr>
      <td width="48">0x0062</td>
      <td width="120">1 (byte)</td>
      <td width="326">resist piercing (0-100)</td>
    </tr>
    <tr>
      <td width="48">0x0063</td>
      <td width="120">1 (byte)</td>
      <td width="326">resist missile (0-100)</td>
    </tr>
    <tr class="unk">
      <td width="48">0x0064</td>
      <td width="120">1 (byte)</td>
      <td width="326"><font color="#000099">unknown</font></td>
    </tr>
    <tr class="unk">
      <td width="48">0x0065</td>
      <td width="120">1 (byte)</td>
      <td width="326"><font color="#000099">unknown</font></td>
    </tr>
    <tr>
      <td width="48">0x0066</td>
      <td width="120">1 (byte)</td>
      <td width="326">lore skill (0-100)</td>
    </tr>
    <tr>
      <td width="48">0x0067</td>
      <td width="120">1 (byte)</td>
      <td width="326">lockpicking skill (minimum value: 0)</td>
    </tr>
    <tr>
      <td width="48">0x0068</td>
      <td width="120">1 (byte)</td>
      <td width="326">stealth skill (minimum value: 0)</td>
    </tr>
    <tr>
      <td width="48">0x0069</td>
      <td width="120">1 (byte)</td>
      <td width="326">traps skill (minimum value: 0)</td>
    </tr>
    <tr>
      <td width="48">0x006a</td>
      <td width="120">1 (byte)</td>
      <td width="326">pick-pockets skill (minimum value: 0)</td>
    </tr>
    <tr>
      <td width="48">0x006b</td>
      <td width="120">1 (byte)</td>
      <td width="326">fatigue (0-100)</td>
    </tr>
    <tr>
      <td width="48">0x006c</td>
      <td width="120">1 (byte)</td>
      <td width="326">intoxification (0-100)</td>
    </tr>
    <tr>
      <td width="48">0x006d</td>
      <td width="120">1 (byte)</td>
      <td width="326">luck</td>
    </tr>
    <tr class="upd">
      <td width="48">0x006e</td>
      <td width="120">1 (byte)</td>
      <td width="326">Large swords proficiency (It is rumored that proficiencies are packed
        in 3-bit chunks for the primary and secondary classes -- i.e. primary
        class proficiency is the low 3 bits, secondary is the middle 3 bits.
        This may be true.)</td>
    </tr>
    <tr class="upd">
      <td width="48">0x006f</td>
      <td width="120">1 (byte)</td>
      <td width="326">Small swords proficiency (It is rumored that proficiencies are packed
        in 3-bit chunks for the primary and secondary classes -- i.e. primary
        class proficiency is the low 3 bits, secondary is the middle 3 bits.
        This may be true.)</td>
    </tr>
    <tr class="upd">
      <td width="48">0x0070</td>
      <td width="120">1 (byte)</td>
      <td width="326">Bows proficiency (It is rumored that proficiencies are packed in 3-bit
        chunks for the primary and secondary classes -- i.e. primary class
        proficiency is the low 3 bits, secondary is the middle 3 bits. This may
        be true.)</td>
    </tr>
    <tr class="upd">
      <td width="48">0x0071</td>
      <td width="120">1 (byte)</td>
      <td width="326">Spears proficiency (It is rumored that proficiencies are packed in
        3-bit chunks for the primary and secondary classes -- i.e. primary class
        proficiency is the low 3 bits, secondary is the middle 3 bits. This may
        be true.)</td>
    </tr>
    <tr class="upd">
      <td width="48">0x0072</td>
      <td width="120">1 (byte)</td>
      <td width="326">Axes proficiency (It is rumored that proficiencies are packed in 3-bit
        chunks for the primary and secondary classes -- i.e. primary class
        proficiency is the low 3 bits, secondary is the middle 3 bits. This may
        be true.)</td>
    </tr>
    <tr class="upd">
      <td width="48">0x0073</td>
      <td width="120">1 (byte)</td>
      <td width="326">Missile weapons proficiency (It is rumored that proficiencies are
        packed in 3-bit chunks for the primary and secondary classes -- i.e.
        primary class proficiency is the low 3 bits, secondary is the middle 3
        bits. This may be true.)</td>
    </tr>
    <tr class="upd">
      <td width="48">0x0074</td>
      <td width="120">1 (byte)</td>
      <td width="326">Great swords proficiency (It is rumored that proficiencies are packed
        in 3-bit chunks for the primary and secondary classes -- i.e. primary
        class proficiency is the low 3 bits, secondary is the middle 3 bits.
        This may be true.)</td>
    </tr>
    <tr class="upd">
      <td width="48">0x0075</td>
      <td width="120">1 (byte)</td>
      <td width="326">Daggers proficiency (It is rumored that proficiencies are packed in
        3-bit chunks for the primary and secondary classes -- i.e. primary class
        proficiency is the low 3 bits, secondary is the middle 3 bits. This may
        be true.)</td>
    </tr>
    <tr class="upd">
      <td width="48">0x0076</td>
      <td width="120">1 (byte)</td>
      <td width="326">Halberds proficiency (It is rumored that proficiencies are packed in
        3-bit chunks for the primary and secondary classes -- i.e. primary class
        proficiency is the low 3 bits, secondary is the middle 3 bits. This may
        be true.)</td>
    </tr>
    <tr class="upd">
      <td width="48">0x0077</td>
      <td width="120">1 (byte)</td>
      <td width="326">Maces proficiency (It is rumored that proficiencies are packed in
        3-bit chunks for the primary and secondary classes -- i.e. primary class
        proficiency is the low 3 bits, secondary is the middle 3 bits. This may
        be true.)</td>
    </tr>
    <tr class="upd">
      <td width="48">0x0078</td>
      <td width="120">1 (byte)</td>
      <td width="326">Flails proficiency (It is rumored that proficiencies are packed in
        3-bit chunks for the primary and secondary classes -- i.e. primary class
        proficiency is the low 3 bits, secondary is the middle 3 bits. This may
        be true.)</td>
    </tr>
    <tr class="upd">
      <td width="48">0x0079</td>
      <td width="120">1 (byte)</td>
      <td width="326">Hammers proficiency (It is rumored that proficiencies are packed in
        3-bit chunks for the primary and secondary classes -- i.e. primary class
        proficiency is the low 3 bits, secondary is the middle 3 bits. This may
        be true.)</td>
    </tr>
    <tr class="upd">
      <td width="48">0x007a</td>
      <td width="120">1 (byte)</td>
      <td width="326">Clubs proficiency (It is rumored that proficiencies are packed in
        3-bit chunks for the primary and secondary classes -- i.e. primary class
        proficiency is the low 3 bits, secondary is the middle 3 bits. This may
        be true.)</td>
    </tr>
    <tr class="upd">
      <td width="48">0x007b</td>
      <td width="120">1 (byte)</td>
      <td width="326">Quarterstaves proficiency (It is rumored that proficiencies are packed
        in 3-bit chunks for the primary and secondary classes -- i.e. primary
        class proficiency is the low 3 bits, secondary is the middle 3 bits.
        This may be true.)</td>
    </tr>
    <tr class="upd">
      <td width="48">0x007c</td>
      <td width="120">1 (byte)</td>
      <td width="326">Crossbow proficiency (It is rumored that proficiencies are packed in
        3-bit chunks for the primary and secondary classes -- i.e. primary class
        proficiency is the low 3 bits, secondary is the middle 3 bits. This may
        be true.)</td>
    </tr>
    <tr class="unk">
      <td width="48">0x007d</td>
      <td width="120">6 (bytes)</td>
      <td width="326"><font color="#000099">Unknown ,always zeros</font></td>
    </tr>
    <tr>
      <td width="48">0x0083</td>
      <td width="120">1 (byte)</td>
      <td width="326">tracking skill (0-100)</td>
    </tr>
    <tr class="unk">
      <td width="48">0x0084</td>
      <td width="120">32 (bytes)</td>
      <td width="326"><font color="#000099">unknown ,always zeros</font></td>
    </tr>
    <tr>
      <td width="48">0x00a4</td>
      <td width="120">4*100 (Strref*100)</td>
      <td width="326"><b>Strrefs which relate to the character. Most of them relate to the
        sound-set. In the file SOUNDOFF.IDS, there are several numbers. These
        indicate indices into this array, and they match various occurrences to
        Strrefs. </b> For instance, SOUNDOFF.IDS has &quot;SELECT_RARE&quot;, at
        index 35. SELECT_RARE actually takes up 4 entries -- the next numbered
        entry is at 39. So the 35th through the 39th entries in this are the
        &quot;select rare&quot; entries, which, it turns out, correspond to the
        amusing sound-bites you get if you repeatedly click on a character. <b> A
        character's biography appears to be stored in the 74th entry in this
        array. </b> What any other entries may be used for is unknown, although I
        suspect it varies from character to character, judging from the label
        &quot;MISC&quot; that is applied around entry #58. Presumably the rest
        of the entries are just for miscellaneous purposes which only apply to
        certain characters.</td>
    </tr>
    <tr>
      <td width="48">0x0234</td>
      <td width="120">1 (byte)</td>
      <td width="326">Highest attained level in primary class (0-100)</td>
    </tr>
    <tr>
      <td width="48">0x0235</td>
      <td width="120">1 (byte)</td>
      <td width="326">Highest attained level in secondary class (0-100)</td>
    </tr>
    <tr>
      <td width="48">0x0236</td>
      <td width="120">1 (byte)</td>
      <td width="326">Highest attained level in tertiary class (0-100)&nbsp;
        <p>0 is Dual Classed cre(if 0x0235 is non-zero, &gt;0 is multi-classed)</p>
      </td>
    </tr>
    <tr class="unk">
      <td width="48">0x0237</td>
      <td width="120">1 (byte)</td>
      <td width="326">1 is Dual classed, but not reached first classlevel +1
        (disabled first class) yet, 2 is when the cre has</td>
    </tr>
    <tr>
      <td width="48">0x0238</td>
      <td width="120">1 (byte)</td>
      <td width="326">Strength (1-25)</td>
    </tr>
    <tr>
      <td width="48">0x0239</td>
      <td width="120">1 (byte)</td>
      <td width="326">Strength % Bonus (0-100)</td>
    </tr>
    <tr>
      <td width="48">0x023a</td>
      <td width="120">1 (byte)</td>
      <td width="326">Intelligence (1-25)</td>
    </tr>
    <tr>
      <td width="48">0x023b</td>
      <td width="120">1 (byte)</td>
      <td width="326">Wisdom (1-25)</td>
    </tr>
    <tr>
      <td width="48">0x023c</td>
      <td width="120">1 (byte)</td>
      <td width="326">Dexterity (1-25)</td>
    </tr>
    <tr>
      <td width="48">0x023d</td>
      <td width="120">1 (byte)</td>
      <td width="326">Constitution (1-25)</td>
    </tr>
    <tr>
      <td width="48">0x023e</td>
      <td width="120">1 (byte)</td>
      <td width="326">Charisma (1-25)</td>
    </tr>
    <tr>
      <td width="48">0x023f</td>
      <td width="120">1 (byte)</td>
      <td width="326">Morale</td>
    </tr>
    <tr>
      <td width="48">0x0240</td>
      <td width="120">1 (byte)</td>
      <td width="326">Morale break</td>
    </tr>
    <tr>
      <td width="48">0x0241</td>
      <td width="120">1 (byte)</td>
      <td width="326">Racial enemy (see RACE.IDS)</td>
    </tr>
    <tr class="upd">
      <td width="48">0x0242</td>
      <td width="120">1 (byte)</td>
      <td width="326">Morale Recovery Time</td>
    </tr>
    <tr class="unk">
      <td width="48">0x0243</td>
      <td width="120">3 (bytes)</td>
      <td width="326"><font color="#000099">unknown</font></td>
    </tr>
    <tr>
      <td width="48">0x0246</td>
      <td width="120">2 (word)</td>
      <td width="326">kits ? there was said somewhere that there is possibility
        to have kits in IWD</td>
    </tr>
    <tr>
      <td width="48">0x0246</td>
      <td width="120">2 (word)</td>
      <td width="326">mage type (see MAGETYPE.IDS)</td>
    </tr>
    <tr>
      <td width="48">0x0248</td>
      <td width="120">8 (resref)</td>
      <td width="326">creature <a href="file:///D:/old%20bg2/infinity%20hacking%20project/baldur_BCS.html">script</a>
        (&quot;override&quot; script?)</td>
    </tr>
    <tr>
      <td width="48">0x0250</td>
      <td width="120">8 (resref)</td>
      <td width="326">creature <a href="file:///D:/old%20bg2/infinity%20hacking%20project/baldur_BCS.html">script</a>
        (&quot;class&quot; script?)</td>
    </tr>
    <tr>
      <td width="48">0x0258</td>
      <td width="120">8 (resref)</td>
      <td width="326">creature <a href="file:///D:/old%20bg2/infinity%20hacking%20project/baldur_BCS.html">script</a>
        (&quot;race&quot; script?)</td>
    </tr>
    <tr>
      <td width="48">0x0260</td>
      <td width="120">8 (resref)</td>
      <td width="326">creature <a href="file:///D:/old%20bg2/infinity%20hacking%20project/baldur_BCS.html">script</a>
        (&quot;general&quot; script?)</td>
    </tr>
    <tr>
      <td width="48">0x0268</td>
      <td width="120">8 (resref)</td>
      <td width="326">creature <a href="file:///D:/old%20bg2/infinity%20hacking%20project/baldur_BCS.html">script</a>
        (&quot;default&quot; script?)</td>
    </tr>
    <tr class="unk">
      <td width="48">0x0270</td>
      <td width="120">104 (bytes)</td>
      <td width="326"><font color="#000099">unknown</font></td>
    </tr>
    <tr>
      <td width="48">0x02d8</td>
      <td width="120">1 (byte)</td>
      <td width="326">&quot;Enemy-Ally&quot; type (see EA.IDS). This field and the next
        several require some explanation. It seems probable, due to the similar
        layout of these fields, that this is actually an object identifier. For
        reference, see the script compiler manual, but in short, it means that
        it has EA, GENERAL, RACE, CLASS, and SPECIFIC, among other things. This
        data could be used to explain the other unused fields. The only
        difficulty with this theory is that the byte which is currently listed
        as &quot;gender&quot; would normally be 'special case' according to the
        script compiler manual. On the other hand, the script compiler manual is
        poorly written and inaccurate in places, probably the result of a quick
        edit of an internal specification which was hacked into a public
        document.</td>
    </tr>
    <tr>
      <td width="48">0x02d9</td>
      <td width="120">1 (byte)</td>
      <td width="326">&quot;General&quot; type (see GENERAL.IDS).</td>
    </tr>
    <tr>
      <td width="48">0x02da</td>
      <td width="120">1 (byte)</td>
      <td width="326">&quot;Race&quot; type (see RACE.IDS).</td>
    </tr>
    <tr>
      <td width="48">0x02db</td>
      <td width="120">1 (byte)</td>
      <td width="326">&quot;Class&quot; type (see CLASS.IDS).</td>
    </tr>
    <tr>
      <td width="48">0x02dc</td>
      <td width="120">1 (byte)</td>
      <td width="326">&quot;Specific&quot; type (see SPECIFIC.IDS).</td>
    </tr>
    <tr>
      <td width="48">0x02dd</td>
      <td width="120">1 (byte)</td>
      <td width="326">&quot;Gender&quot; type (see GENDER.IDS).</td>
    </tr>
    <tr>
      <td width="48">0x02de</td>
      <td width="120">5 (bytes)</td>
      <td width="326">unknown; however, see description at &quot;Enemy-Ally&quot; type byte
        above. If this is, in fact, an object id, then this here would be the 5
        bytes which are used for functional specification of an object (see
        OBJECT.IDS). Functional specification of an object involves things like <code>LastAttackerOf(Myself)</code>
        or <code>ProtectorOf(LastTalkedToBy(Protagonist))</code>.</td>
    </tr>
    <tr>
      <td width="48">0x02e3</td>
      <td width="120">1 (byte)</td>
      <td width="326">&quot;Alignment&quot; type (see ALIGNMEN.IDS.)</td>
    </tr>
    <tr class="unk">
      <td width="48">0x02e4</td>
      <td width="120">2 (word)</td>
      <td width="326"><font color="#000099">unknown. This field and the next appear to hold two 16-bit words, both
        of which are usually 0xffff.</font></td>
    </tr>
    <tr class="unk">
      <td width="48">0x02e6</td>
      <td width="120">2 (word)</td>
      <td width="326"><font color="#000099">unknown</font></td>
    </tr>
    <tr>
      <td width="48">0x02e8</td>
      <td width="120">32 (char array)</td>
      <td width="326">This field determines the name of the &quot;death variable&quot; to
        set when this creature has been killed.</td>
    </tr>
    <tr>
      <td width="48">0x0308</td>
      <td width="120">4 (dword)</td>
      <td width="326"><a href="#formCREV9_0_KnownSpell">Known spells</a> offset</td>
    </tr>
    <tr>
      <td width="48">0x030c</td>
      <td width="120">4 (dword)</td>
      <td width="326"><a href="#formCREV9_0_KnownSpell">Known spells</a> count</td>
    </tr>
    <tr>
      <td width="48">0x0310</td>
      <td width="120">4 (dword)</td>
      <td width="326"><a href="#formCREV9_0_MemSpellInfo">Spell memorization info</a> offset</td>
    </tr>
    <tr>
      <td width="48">0x0314</td>
      <td width="120">4 (dword)</td>
      <td width="326"><a href="#formCREV9_0_MemSpellInfo">Spell memorization info</a>
        entries count</td>
    </tr>
    <tr>
      <td width="48">0x0318</td>
      <td width="120">4 (dword)</td>
      <td width="326"><a href="#formCREV9_0_MemSpell">Memorized spells</a> offset</td>
    </tr>
    <tr>
      <td width="48">0x031c</td>
      <td width="120">4 (dword)</td>
      <td width="326"><a href="#formCREV9_0_MemSpell">Memorized spells</a> count</td>
    </tr>
    <tr>
      <td width="48">0x0320</td>
      <td width="120">4 (dword)</td>
      <td width="326"><a href="#formCREV9_0_ItemSlot">Item slots</a> offset</td>
    </tr>
    <tr>
      <td width="48">0x0324</td>
      <td width="120">4 (dword)</td>
      <td width="326"><a href="#formCREV9_0_Item">Items </a>offset</td>
    </tr>
    <tr>
      <td width="48">0x0328</td>
      <td width="120">4 (dword)</td>
      <td width="326"><a href="#formCREV9_0_Item">Items </a>count</td>
    </tr>
    <tr>
      <td width="48">0x032c</td>
      <td width="120">4 (dword)</td>
      <td width="326">offset to <a href="../Effects/effects.htm"><font color="#FF0000">effects</font></a>
        currently affecting creature</td>
    </tr>
    <tr>
      <td width="48">0x0330</td>
      <td width="120">4 (dword)</td>
      <td width="326">count of <a href="../Effects/effects.htm"><font color="#FF0000">effects</font></a>
        currently affecting creature</td>
    </tr>
    <tr>
      <td width="48">0x0334</td>
      <td width="120">8 (resref)</td>
      <td width="326">associated <a href="DLGformat.htm"><font color="#FF0000">dialog
        file</font></a>. (A CRE can have a default <a href="DLGformat.htm"><font color="#FF0000">DLG
        file</font></a> associated. This can be overridden in the <a href="AreFormat.htm"><font color="#FF0000">ARE
        file</font></a>, and I think can also be overridden by a <a href="BCSformat.htm"><font color="#FF0000">script</font></a>).</td>
    </tr>
  </tbody>
</table>
<h4 class="reshead"><a name="formCREV9_0_KnownSpell">CRE V9.0 Known Spells</a></h4>
<p>This section details which spells the creature knows, and it consists of an
array of entries formatted as follows.</p>
<table border="1" class="tbl3" width="509">
  <colgroup>
    <col class="col1" width="5%">
    <col class="col2" width="12%">
    <col class="col3" width="*">
  </colgroup>
  <thead>
    <tr>
      <th width="48">Offset</th>
      <th width="103">Size (data type)</th>
      <th width="336">Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td width="48">0x0000</td>
      <td width="103">8 (resref)</td>
      <td width="336">Resource name of the <a href="SPLformat.htm"><font color="#FF0000">SPL
        file</font></a> holding the particular spell</td>
    </tr>
    <tr>
      <td width="48">0x0008</td>
      <td width="103">2 (word)</td>
      <td width="336">Level of the spell (less 1)</td>
    </tr>
    <tr>
      <td width="48">0x000a</td>
      <td width="103">2 (word)</td>
      <td width="336">Type of the spell (0=Priest, 1=Wizard, 2=Innate, other values? This
        doesn't appear in any of the IDS files, to my knowledge)</td>
    </tr>
  </tbody>
</table>
<h4 class="reshead"><a name="formCREV9_0_MemSpellInfo">CRE V9.0 Spell
Memorization Info</a></h4>
<p>This section details how many spells the creature can memorize, and how many
it has memorized. It consists of an array of entries formatted as follows.</p>
<table border="1" class="tbl3" width="509">
  <colgroup>
    <col class="col1" width="5%">
    <col class="col2" width="12%">
    <col class="col3" width="*">
  </colgroup>
  <thead>
    <tr>
      <th width="48">Offset</th>
      <th width="103">Size (data type)</th>
      <th width="336">Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td width="48">0x0000</td>
      <td width="103">2 (word)</td>
      <td width="336">Spell level (less 1)</td>
    </tr>
    <tr>
      <td width="48">0x0002</td>
      <td width="103">2 (word)</td>
      <td width="336">Number of spells memorizable</td>
    </tr>
    <tr>
      <td width="48">0x0004</td>
      <td width="103">2 (word)</td>
      <td width="336">Number of spells memorizable (how does this differ from the field at
        2?)</td>
    </tr>
    <tr>
      <td width="48">0x0006</td>
      <td width="103">2 (word)</td>
      <td width="336">Spell type (as above in <a href="#formCREV9_0_KnownSpell">Known Spells</a>,
        0=Priest, 1=Wizard, 2=Innate, other values are either unknown or
        invalid).</td>
    </tr>
    <tr>
      <td width="48">0x0008</td>
      <td width="103">4 (dword)</td>
      <td width="336">Index into <a href="#formCREV9_0_MemSpell">memorized spells</a> array
        of first memorized spell of this type in this level.</td>
    </tr>
    <tr>
      <td width="48">0x000c</td>
      <td width="103">4 (dword)</td>
      <td width="336">Count of memorized spell entries in <a href="#formCREV9_0_MemSpell">memorized
        spells</a> array of memorized spells of this type in this level.</td>
    </tr>
  </tbody>
</table>
<h4 class="reshead"><a name="formCREV9_0_MemSpell">CRE V9.0 Memorized Spells
Table</a></h4>
<p>This section details which spells the character has memorized. It consists of
an array of entries formatted as follows.</p>
<table border="1" class="tbl3" width="509">
  <colgroup>
    <col class="col1" width="5%">
    <col class="col2" width="12%">
    <col class="col3" width="*">
  </colgroup>
  <thead>
    <tr>
      <th width="48">Offset</th>
      <th width="103">Size (data type)</th>
      <th width="336">Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td width="48">0x0000</td>
      <td width="103">8 (resref)</td>
      <td width="336">Resource name of the <a href="SPLformat.htm"><font color="#FF0000">SPL
        file</font></a> holding the particular memorized spell</td>
    </tr>
    <tr class="unc">
      <td width="48">0x0008</td>
      <td width="103">4 (dword)</td>
      <td width="336"><font color="#000099">Unknown; likely, it is set to 1 when the spell is memorized, and set
        to 0 once the spell has been cast. In this way, it keeps track of which
        spells are scheduled to be memorized when the CRE next sleeps.</font></td>
    </tr>
  </tbody>
</table>
<h4 class="reshead"><a name="formCREV9_0_Item">CRE V9.0 Items Table</a></h4>
<p>This section details which items the character has. It consists of an array
of entries formatted as follows.</p>
<table border="1" class="tbl3" width="509">
  <colgroup>
    <col class="col1" width="5%">
    <col class="col2" width="12%">
    <col class="col3" width="*">
  </colgroup>
  <thead>
    <tr>
      <th width="48">Offset</th>
      <th width="103">Size (data type)</th>
      <th width="336">Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td width="48">0x0000</td>
      <td width="103">8 (resref)</td>
      <td width="336">Resource name of the <a href="ITMformat.htm"><font color="#FF0000">ITM
        file</font></a> holding the particular item</td>
    </tr>
    <tr class="unk">
      <td width="48">0x0008</td>
      <td width="103">2 (word)</td>
      <td width="336"><font color="#000099">unknown</font></td>
    </tr>
    <tr>
      <td width="48">0x000a</td>
      <td width="103">2 (word)</td>
      <td width="336">&quot;usage1&quot; -- typically, the count of the item, or the number
        of uses remaining in the item if it is not a &quot;stackable&quot; item.</td>
    </tr>
    <tr>
      <td width="48">0x000a</td>
      <td width="103">2 (word)</td>
      <td width="336">&quot;usage2&quot; -- the second parameter passed when the script
        function &quot;CreateItem&quot; is called. This might only be used for
        wands and other magical items which have multiple uses (i.e. cast
        fireball n times and aganazzar's scorcher m times)</td>
    </tr>
    <tr>
      <td width="48">0x000c</td>
      <td width="103">2 (word)</td>
      <td width="336">&quot;usage3&quot; -- the third parameter passed when the script
        function &quot;CreateItem&quot; is called. Presumably like 'usage2'.</td>
    </tr>
    <tr>
      <td width="48">0x000e</td>
      <td width="103">4 (dword)</td>
      <td width="336">Flags:
        <ul>
          <li>bit 0: identified
          <li>other bits: to fill in later</li>
        </ul>
      </td>
    </tr>
  </tbody>
</table>
<h4 class="reshead"><a name="formCREV9_0_ItemSlots">CRE V9.0 Item Slots</a></h4>
<p>This is an array keeping track of which items are located in each particular
location in the CRE's inventory. There are 38 slots, and they are NOT the same
as the order specified in specified in SLOTS.IDS. I will update with the actual
order ASAP. Each entry in here will either be 0xffff, meaning &quot;empty&quot;,
or it will be an index into the <a href="#formCREV9_0_Item">Items table</a>.</p>

</body>


<!-- Mirrored from www25.brinkster.com by HTTrack Website Copier/3.x [XR,YP'2001] -->
</html>
