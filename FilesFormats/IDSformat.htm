<html>


<!-- Mirrored from www25.brinkster.com by HTTrack Website Copier/3.x [XR,YP'2001] -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1250">
<meta http-equiv="Content-Language" content="en-us">
<link href="ManverusStyle.css" type=text/css rel=stylesheet>
<title>IE File Formats</title>
</head>

<body>

<h1 align="center">IDS file format</h1>
<table border="1" width="610">
  <tr>
    <td width="28%">FileExtension :</td>
    <td width="72%">IDS</td>
  </tr>
  <tr>
    <td width="28%">Content :</td>
    <td width="72%">Description of IDS files</td>
  </tr>
  <tr>
    <td width="28%">History :</td>
    <td width="72%">File done by IEFFHP</td>
  </tr>
  <tr>
    <td width="28%">&nbsp;</td>
    <td width="72%">Lantern-Archon (26.01.2002)</td>
  </tr>
</table>
<h2>&nbsp;</h2>
<h2>Description</h2>
<p>IDS files provide a mapping from numeric values to arbitrary string values.&nbsp;</p>
<p>IDS files allow you to assign text to numerical values to use in scripts or to reference other files and give them numerical values. In a spellcasting script the SPELL.IDS gives the text WIZARD_MAGIC_MISSILE to spell number 2122 where 2122 is the file containing magic missile. While most editors would know that magic missile is SPWI122 you cant remember them all its much easier to script WIZARD_GASEOUS_FORM for example or to detect state STATE_INVISIBLE than whatever its value it. When you compile a script the compiler reads the text like WIZARD_MAGIC_MISSILE and looks at SPELL.IDS and translates it into 2122 when its compiling. The end result is that your BCS files has 2122 in it, thus you dont need SPELL.IDS for the engine to read it back again. Which is why removing stat.ids still allows already compiled scripts to still detect states.<br>
<br>
IDS files can also reference other files such as PRO files. For example you have a PRO file called ICEKNIFE.PRO but you need a numerical value to use in the spell so you add ICEKNIFE.PRO to the PROJECTL.IDS and give it a number. The engine reads this IDS everytime you start the game so this is critical for running and would mess it up if you removed it. When it reads it, it remembers all the numbers in the file and the names of the PRO files that go with them, then when a spell or item references that number it can play the correct PRO file. So basically some files are critical to running and some aren't but are needed to compile scripts.&nbsp;</p>
<p>This file format is very straightforward. In fact, it
barely merits mention, but for completeness, it will be mentioned here.</p>
<h2>IDS files: Baldur's Gate, Planescape: Torment, Icewind Dale, Baldur's Gate 2
SoA</h2>
<p>This is a text file format, arranged in two columns. Like all text files in
BG, it has CR-LF delimited lines (i.e. 0x0d 0x0a at the end of each line). First
column is numeric constants, either decimal integers, or hexadecimal integers
specified in the C/C++ notation. In case you are not familiar with this
notation, it looks like <code>0x07d0</code>, for instance, which is the hex
representation of decimal <code>2000</code>. Everything to the right of the
whitespace following the constant is the string value of the constant. The only
row which doesn't match this specification is the first row, which consists of a
single number. When these files are loaded into memory, sometimes a quick
&quot;integer to string&quot; index is built. The first row, which is not
loaded, holds the maximum value, which is computed whenever the file is loaded,
and which would determine the size of a quick lookup table, if one is to be
built.</p>
<h2>Encryption</h2>
<p>Note that some of these files are encrypted, as are some of the 2DA files.
(The encryption appears to only occur in BG, and not in PS: Torment. Anyway, to
read about the technical details of the encryption, go to the <a href="../General/encryption.htm"><font color="#FF0000">encryption
page</font></a>.) These encrypted files can be recognized by the first two bytes, which
are 0xffff in case of an encrypted file, and are not part of the ciphertext. An
unencrypted file start immediately with the plaintext, which can always be
assumed not to start with the 0xff character.</p>

</body>


<!-- Mirrored from www25.brinkster.com by HTTrack Website Copier/3.x [XR,YP'2001] -->
</html>
