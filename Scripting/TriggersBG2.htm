<html>


<!-- Mirrored from www25.brinkster.com by HTTrack Website Copier/3.x [XR,YP'2001] -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1250">
<meta http-equiv="Content-Language" content="en-us">
<link href="ManverusStyle.css" type=text/css rel=stylesheet>
<title>Scripting</title>
</head>

<body>
<p align="center"><font size="5">BG2 Triggers Explained</font></p>
<p align="left">By Vaskez</p>
<p align="left"><font size="2">There are still quite a few triggers which I have
not tested and have made an educated guess (or in a few cases left it blank) as
to how it works. If anyone knows anything that I have missed out, please email
me, or let me know through a PM on a bulletin board for example.</font></p>
<p align="left"><font size="2"><br>
Introduction:<br>
Scripts are mostly used by creatures and areas but they can also be used by
traps/trigger regions and doors. Some triggers only make sense if the script
containing them is running on a trigger region for example and many are only
usable for creatures. Triggers are tested one by one by the script checker which
runs all the time. A trigger is evaluated and can only ever be true or false. It
is said to return true or return false. If all the triggers in an IF block
return true then the actions in the RESPONSE block will take place. Many of the
triggers below can be tested with the ! operator which means &quot;NOT&quot;.
For example !See(O:Object*)<br>
would return true if the current CRE does not see the object specified.
Generally triggers with ! in front of them return true whenever the same trigger
without the ! would return false.<br>
<br>
Key/Glossary:<br>
NT = Not tested by me, i.e. I assume it works as described.<br>
Resref = Resource reference, an alphanumeric string which must be in quotes.<br>
Active CRE = The creature or player character running the script in which the
trigger is found.<br>
Script round = One complete check of the script from top to bottom i.e. the time
it takes for the computer to check the script until it finds a true block and
then start again from the top.<br>
<br>
Parameter Guide:<br>
A parameter is an argument supplied to the trigger within the parentheses ().<br>
<b>Common parameters:</b><br>
O:Object* - an object specified in the Object.ids file or a script name of a CRE
wrapped in quotes &quot;&quot; or the name of a container or door or trap in
quotes. When specifying creatures, a special format can be used to allow a whole
group/category of creatures to act as the parameter. The format is [EnemyAlly.General.Race.Class.Specifics.Instance.SpecialCase].
Where General is from General.ids for example. A 0 means &quot;any in this
category&quot;. For example: [ENEMY.0.0.MAGE] specifies all creatures that are
enemies of the party, any general category, any race, mages. Some triggers are
only useful when types of creatures are specified in this way. Remember:
[ANYONE] will allow ANY object to satisfy the trigger. i.e. See([ANYONE])
returns true if any friend or foe is seen.<br>
<br>
I:XX*YY - an integer representing XX for which the description/meaning can be
found in YY.ids.<br>
<br>
S:Resref - A string in quotes &quot;&quot; giving the name of the file in
question, usually an item or creature file.</font></p>
<p align="center"><font size="4"><br>
THE TRIGGERS</font></p>
<p align="left"><font size="2"><br>
<br>
<b>0x0001 Acquired(S:ResRef*)<br>
</b>NT Returns true only if the current CRE obtained the specified item in the
last script round.<br>
<br>
<b>0x0002 AttackedBy(O:Object*,I:Style*AStyles)<br>
</b>Returns true only if the active CRE was attacked in the style specified (not
necessarily hit)<br>
or had an offensive spell cast on it by the specified object in the last script
round. If the Style is DEFAULT then it returns true for any attack.<br>
<br>
<b>0x0003 Help(O:Object*)<br>
</b>NT Returns true only if the specified object shouted for help (using the
Shout() action?) in the last script round.<br>
<br>
<b>0x0004 Joins(O:Object*)<br>
</b>NT<br>
<br>
<b>0x0005 Leaves(O:Object*)<br>
</b>NT<br>
<br>
<b>0x0006 ReceivedOrder(O:Object*,I:Order ID*)<br>
</b>NT<br>
<br>
<b>0x0007 Said(O:Object*,I:Dialog ID*)<br>
</b>NT<br>
<br>
<b>0x0008 TurnedBy(O:Object*)<br>
</b>NT Returns true only if the active CRE was turned by the specified priest or
paladin.<br>
<br>
<b>0x0009 Unusable(S:ResRef*)<br>
</b>NT Returns true only if the specified item is unusable by the active CRE.<br>
<br>
<b>0x400A Alignment(O:Object*,I:Alignment*Align)<br>
</b>Returns true only if the alignment of the specified object matches that in
the second parameter.<br>
<br>
<b>0x400B Allegiance(O:Object*,I:Allegience*EA)<br>
</b>Returns true only if the Enemy/Ally status of the specified object matches
that in the second parameter.<br>
<br>
<b>0x400C Class(O:Object*,I:Class*Class)<br>
</b>Returns true only if the Class of the specified object matches that in the
second parameter.<br>
<br>
<b>0x400D Exists(O:Object*)<br>
</b>NT Returns true only if the specified object exists.<br>
<br>
<b>0x400E General(O:Object*,I:General*General)<br>
</b>Returns true only if the General category of the specified object matches
that in the second parameter.<br>
<br>
<b>0x400F Global(S:Name*,S:Area*,I:Value*)<br>
</b>Returns true only if the variable with name 1st parameter of type 2nd
parameter has value 3rd parameter.<br>
<br>
<b>0x4010 HP(O:Object*,I:Hit Points*)<br>
</b>Returns true only if the current hitpoints of the specified object are equal
to the 2nd parameter.<br>
<br>
<b>0x4011 HPGT(O:Object*,I:Hit Points*)<br>
</b>Returns true only if the current hitpoints of the specified object are
greater than the 2nd parameter.<br>
<br>
<b>0x4012 HPLT(O:Object*,I:Hit Points*)<br>
</b>Returns true only if the current hitpoints of the specified object are less
than the 2nd parameter.<br>
<br>
<b>0x4013 LOS(O:Object*,I:Range*)<br>
</b>Returns true only if the object specified is in the line of sight of the
active CRE and within the given range. This seems to be a combination of the
Range and See triggers (see below).<br>
<br>
<b>0x4014 Morale(O:Object*,I:Morale*)<br>
</b>Returns true only if the morale of the specified object is equal to the
second parameter.<br>
<br>
<b>0x4015 MoraleGT(O:Object*,I:Morale*)<br>
</b>Returns true only if the morale of the specified object is greater than the
second parameter.<br>
<br>
<b>0x4016 MoraleLT(O:Object*,I:Morale*)<br>
</b>Returns true only if the morale of the specified object is less than the
second parameter.<br>
<br>
<b>0x4017 Race(O:Object*,I:Race*Race)<br>
</b>Returns true only if the Race of the specified object is the same as that
specified by the 2nd parameter.<br>
<br>
<b>0x4018 Range(O:Object*,I:Range*)<br>
</b>Returns true only if the specified object is within distance given (in feet)
of the active CRE.<br>
<br>
<b>0x4019 Reputation(O:Object*,I:Reputation*)<br>
</b>Returns true only if the reputation of the specified object is equal to the
second parameter.<br>
<br>
<b>0x401A ReputationGT(O:Object*,I:Reputation*)<br>
</b>Returns true only if the reputation of the specified object is greater than
the second parameter.<br>
<br>
<b>0x401B ReputationLT(O:Object*,I:Reputation*)<br>
</b>Returns true only if the reputation of the specified object is greater than
the second parameter.<br>
<br>
<b>0x401C See(O:Object*)<br>
</b>Returns true only if the active CRE can see the specified object which must
not be hidden or invisible.<br>
<br>
<b>0x401D Specifics(O:Object*,I:Specifics*Specific)<br>
</b>Returns true only if the specifics (as set in the CRE file or by the
ChangeSpecifics action) of the specified object is equal to the 2nd parameter.<br>
<br>
<b>0x401E Time(I:Time*Time)<br>
</b>Returns true only if the period of day matches the period in the 2nd
parameter (taken from Time.ids).<br>
<br>
<b>0x401F TimeOfDay(I:Time Of Day*TimeODay)<br>
</b>As above but less specific and uses TimeODay.ids.<br>
<br>
<b>0x0020 HitBy(O:Object*,I:DameType*Damages)<br>
</b>Returns true only if the active CRE was hit by the specifed object by the
specified damage type in the last script round. If the damage type is CRUSHING
or 0 then this will return true for ANY damage type.<br>
<br>
<b>0x0021 HotKey(I:Key*HotKey)<br>
</b>Returns true only if the specified key was pressed in the last script round.<br>
<br>
<b>0x0022 TimerExpired(I:ID*)<br>
</b>Returns true only if the local timer with the specified ID has expired.<br>
<br>
<b>0x4023 True()<br>
</b>Always returns true.<br>
<br>
<b>0x0024 Trigger(I:TriggerNum*)<br>
</b>NT<br>
<br>
<b>0x0025 Die()<br>
</b>Returns true if the active CRE has died in the last script round.<br>
<br>
<b>0x0026 TargetUnreachable(O:Object*)<br>
</b>NT Returns true only if the object specified cannot be reached by normal
walking by the active CRE.<br>
<br>
<b>0x4027 Delay(I:Delay*)<br>
</b>Delays the next check of the block of triggers where this trigger is, by the
number of seconds specified. This value is not stored when the game is saved.<br>
<br>
<b>0x4028 NumCreature(O:Object*,I:Number*)<br>
</b>Returns true only if the number of creatures of the type specified in sight
of the active CRE are equal to the 2nd parameter.<br>
<br>
<b>0x4029 NumCreatureLT(O:Object*,I:Number*)<br>
</b>As above except for less than.<br>
<br>
<b>0x402A NumCreatureGT(O:Object*,I:Number*)<br>
</b>As above except for greater than.<br>
<br>
<b>0x402B ActionListEmpty()<br>
</b>Returns true only if the active CRE has no actions waiting to be performed,
i.e. is idle.<br>
<br>
<b>0x402C HPPercent(O:Object*,I:Hit Points*)<br>
</b>See HP(O:Object*,I:Hit Points*) except this is for a percentage.<br>
<br>
<b>0x402D HPPercentLT(O:Object*,I:Hit Points*)<br>
</b>See HPLT(O:Object*,I:Hit Points*) except this is for a percentage.<br>
<br>
<b>0x402E HPPercentGT(O:Object*,I:Hit Points*)<br>
</b>See HPGT(O:Object*,I:Hit Points*) except this is for a percentage.<br>
<br>
<b>0x002F Heard(O:Object*,I:ID*SHOUTIDS)<br>
</b>Returns true only if the active CRE was within 30 feet of the specified
object and the specified object shouted the specified number (which does not
HAVE to be in SHOUTIDS.ids) in the last script round.<br>
<br>
<b>0x4030 False()<br>
</b>Never returns true, i.e. is always false. A block of triggers containing
this will never return true regardless of the other triggers in the block. The
corresponding actions will never take place.<br>
<br>
<b>0x4031 HaveSpell(I:Spell*Spell)<br>
</b>Returns true only if the active CRE has the specified spell memorised. The
spell must be referenced correctly in Spell.ids.<br>
<br>
<b>0x4032 HaveAnySpells()<br>
</b>Returns true if the active CRE has at least one spell memorised.<br>
<br>
<b>0x0033 BecameVisible()<br>
</b>NT Returns true only if the active CRE turned visible in the last script
round.<br>
<br>
<b>0x4034 GlobalGT(S:Name*,S:Area*,I:Value*)<br>
</b>See Global(S:Name*,S:Area*,I:Value*) except the variable must be greater
than the value specified to be true.<br>
<br>
<b>0x4035 GlobalLT(S:Name*,S:Area*,I:Value*)<br>
</b>As above except for less than.<br>
<br>
<b>0x0036 OnCreation()<br>
</b>Returns true only if the active creature came into existance in the last
script round. If this is in an area script this returns true when the player
enters the area for the first time.<br>
<br>
<b>0x4037 StateCheck(O:Object*,I:State*State)<br>
</b>Returns true only if the specified object is in the state specified.<br>
<br>
<b>0x4038 NotStateCheck(O:Object*,I:State*State)<br>
</b>Exact opposite of above.<br>
<br>
<b>0x4039 NumTimesTalkedTo(I:Num*)<br>
</b>Returns true only if the player's party has spoken to the active CRE the
exact number of times specified.<br>
<br>
<b>0x403A NumTimesTalkedToGT(I:Num*)<br>
</b>Returns true only if the player's party has spoken to the active CRE more
than the number of times specified.<br>
<br>
<b>0x403B NumTimesTalkedToLT(I:Num*)<br>
</b>Returns true only if the player's party has spoken to the active CRE less
than the number of times specified.<br>
<br>
<b>0x403C Reaction(O:Object*,I:Value*Reaction)<br>
</b>Returns true only if the reaction of the object specified (on the
friendly-hostile scale) to the player was as specified.<br>
<br>
<b>0x403D ReactionGT(O:Object*,I:Value*Reaction)<br>
</b>Returns true if the reaction of the object specified (on the
friendly-hostile scale) to the player was greater than specified.<br>
<br>
<b>0x403E ReactionLT(O:Object*,I:Value*Reaction)<br>
</b>Returns true if the reaction of the object specified (on the
friendly-hostile scale) to the player was lower than specified.<br>
<br>
<b>0x403F GlobalTimerExact(S:Name*,S:Area*)<br>
</b>NT<br>
<br>
<b>0x4040 GlobalTimerExpired(S:Name*,S:Area*)<br>
</b>Returns true only if the timer with the name specified and of the type in
the 2nd parameter has run and expired.<br>
<br>
<b>0x4041 GlobalTimerNotExpired(S:Name*,S:Area*)<br>
</b>Returns true only if the timer with the name specified and of the type in
the 2nd parameter is still running. Note that if we use !GlobalTimerNotExpired(S:Name*,S:Area*)
this will return true if the timer has never been set OR if it has already
expired- very useful...most useful of all the GlobalTimer triggers :) .<br>
<br>
<b>0x4042 PartyHasItem(S:Item*)<br>
</b>Returns true if any of the party members have the specified item in their
inventory.<br>
<br>
<b>0x4043 InParty(O:Object*)<br>
</b>Returns true only if the specifed object is in the player's party.<br>
<br>
<b>0x4044 CheckStat(O:Object*,I:Value*,I:StatNum*Stats)<br>
</b>Returns true only if the specified object has the statistic in the 3rd
parameter at the value of the 2nd parameter.<br>
<br>
<b>0x4045 CheckStatGT(O:Object*,I:Value*,I:StatNum*Stats)<br>
</b>Returns true only if the specified object has the statistic in the 3rd
parameter greater than the value of the 2nd parameter.<br>
<br>
<b>0x4046 CheckStatLT(O:Object*,I:Value*,I:StatNum*Stats)<br>
</b>Returns true only if the specified object has the statistic in the 3rd
parameter less than the value of the 2nd parameter.<br>
<br>
<b>0x4047 RandomNum(I:Range*,I:Value*)<br>
</b>Generates a random number between 1 and Range. Returns true only if the
random number equals the 2nd parameter.<br>
<br>
<b>0x4048 RandomNumGT(I:Range*,I:Value*)<br>
</b>NT As above except returns true only if the random number is greater than
the 2nd parameter.<br>
<br>
<b>0x4049 RandomNumLT(I:Range*,I:Value*)<br>
</b>NT As above except returns true only if the random number is less than the
2nd parameter.<br>
<br>
<b>0x004A Died(O:Object*)<br>
</b>Returns true only if the specifed object died in the last script round.<br>
<br>
<b>0x004B Killed(O:Object*)<br>
</b>NT Returns true if the active CRE killed the specified object in the last
script round.<br>
<br>
<b>0x004C Entered(O:Object*)<br>
</b>Only for trigger regions in areas. Returns true only if the specified object
entered the trigger region in the last script round.<br>
<br>
<b>0x404D Gender(O:Object*,I:Sex*Gender)<br>
</b>Returns true only if the gender of the specified object is that given in the
2nd parameter.<br>
<br>
<b>0x404E PartyGold(I:Amount*)<br>
</b>Returns true only if the player's party has the amount of gold specified in
the 2nd parameter.<br>
<br>
<b>0x404F PartyGoldGT(I:Amount*)<br>
</b>Returns true only if the player's party has more gold than specified in the
2nd parameter.<br>
<br>
<b>0x4050 PartyGoldLT(I:Amount*)<br>
</b>Returns true only if the player's party has less gold than specified in the
2nd parameter.<br>
<br>
<b>0x4051 Dead(S:Name*)<br>
</b>Returns only true if the creature with the specified script name has its
death variable set to 1. Not every form of death sets this, but most do. So it's
an almost complete test for death. The creature must have existed for this to be
true.<br>
<br>
<b>0x0052 Opened(O:Object*)<br>
</b>Only for door scripts. Returns true only if the specified object opened the
active door in the last script round.<br>
<br>
<b>0x0053 Closed(O:Object*)<br>
</b>Only for door scripts. Returns true only if the specified object closedthe
active door in the last script round.<br>
<br>
<b>0x0054 Detected(O:Object*)<br>
</b>Only for trap scripts. Returns true only if the specified object detected
this trap in the last script round.<br>
<br>
<b>0x0055 Reset(O:Object*)<br>
</b>NT Only for trap scripts? Returns true only if this trap or trigger was
reset in the last script round by the object specified.<br>
<br>
<b>0x0056 Disarmed(O:Object*)<br>
</b>Only for trap/trigger region scripts. Returns true only if the specified
object disarmed this trap in the last script round.<br>
<br>
<b>0x0057 Unlocked(O:Object*)<br>
</b>NT Only for door scripts? Returns true only if this door was unlocked by the
specified object in the last script round.<br>
<br>
<b>0x4058 OutOfAmmo()<br>
</b>NT Returns true only if the active CRE has no ammunition for the current
ranged weapon.<br>
<br>
<b>0x4059 NumTimesInteracted(I:NPC*NPC,I:Num*)<br>
</b>NT Returns true only if the specified NPC has interacted with the party a
number of times equal to the 2nd parameter.<br>
<br>
<b>0x405A NumTimesInteractedGT(I:NPC*NPC,I:Num*)<br>
</b>NT Returns true only if the specified NPC has interacted with the party a
number of times greater than the 2nd parameter.<br>
<br>
<b>0x405B NumTimesInteractedLT(I:NPC*NPC,I:Num*)<br>
</b>NT Returns true only if the specified NPC has interacted with the party a
number of times less than the 2nd parameter.<br>
<br>
<b>0x005C BreakingPoint()<br>
</b>NT Returns true only if the active CRE is at its morale breaking point.<br>
<br>
<b>0x005D PickPocketFailed(O:Object*)<br>
</b>Seems to be broken. Not used in any existing scripts.<br>
<br>
<b>0x005E StealFailed(O:Object*)<br>
</b>For shopkeepers. Returns true if the specified object failed to steal from
the shop in the last script round.<br>
<br>
<b>0x005F DisarmFailed(O:Object*)<br>
</b>NT Not used in any existing scripts.<br>
<br>
<b>0x0060 PickLockFailed(O:Object*)<br>
</b>NT Not used in any existing scripts.<br>
<br>
<b>0x4061 HasItem(S:ResRef*,O:Object*)<br>
</b>Returns true only if the specified object has the specified item in its
inventory.<br>
<br>
<b>0x4062 InteractingWith(O:Object*)<br>
</b>NT Returns true only if the active CRE is interacting (dialogue?)<br>
with the specified object.<br>
<br>
<b>0x4063 InWeaponRange(O:Object*)<br>
</b>Returns true only if the specified object is within the range of the active
CRE's currently equipped weapon.<br>
<br>
<b>0x4064 HasWeaponEquiped(O:Object*)<br>
</b>Returns true only if the specified object has a weapon in a quickslot.<br>
<br>
<b>0x4065 Happiness(O:Object*,I:Amount*Happy)<br>
</b>NT Returns true only if the specified object has the specified happiness
value.<br>
<br>
<b>0x4066 HappinessGT(O:Object*,I:Amount*Happy)<br>
</b>NT Returns true only if the specified object has greater than the specified
happiness value.<br>
<br>
<b>0x4067 HappinessLT(O:Object*,I:Amount*Happy)<br>
</b>NT Returns true only if the specified object has less than the specified
happiness value.<br>
<br>
<b>0x4068 TimeGT(I:Time*Time)<br>
</b>Returns true only if the current time is greater than that specified.<br>
<br>
<b>0x4069 TimeLT(I:Time*Time)<br>
</b>Returns true only if the current time is less than that specified.<br>
<br>
<b>0x406A NumInParty(I:Num*)<br>
</b>Returns true only if the number of party members (dead ones also count)<br>
is equal to the number specified.<br>
<br>
<b>0x406B NumInPartyGT(I:Num*)<br>
</b>Returns true only if the number of party members (dead ones also count)<br>
is greater than the number specified.<br>
<br>
<b>0x406C NumInPartyLT(I:Num*)<br>
</b>Returns true only if the number of party members (dead ones also count)<br>
is less than the number specified.<br>
<br>
<b>0x406D UnselectableVariable(I:Num*)<br>
</b>NT<br>
<br>
<b>0x406E UnselectableVariableGT(I:Num*)<br>
</b>NT<br>
<br>
<b>0x406F UnselectableVariableLT(I:Num*)<br>
</b>NT<br>
<br>
<b>0x0070 Clicked(O:Object*)<br>
</b>Only for trigger regions. Returns true if the specified object clicked on
the trigger region running this script.<br>
<br>
<b>0x4039 NumberOfTimesTalkedTo(I:Num*)<br>
</b>Returns true only if the number of times the party has spoken to this
creature is equal to the number specified.<br>
<br>
<b>0x4071 NumDead(S:Name*,I:Num*)<br>
</b>Returns true only if the number of creatures with script name
&quot;Name&quot; that have been killed is equal to the 2nd parameter.<br>
<br>
<b>0x4072 NumDeadGT(S:Name*,I:Num*)<br>
</b>Returns true only if the number of creatures with script name
&quot;Name&quot; that have been killed is greater than the 2nd parameter.<br>
<br>
<b>0x4073 NumDeadLT(S:Name*,I:Num*)<br>
</b>Returns true only if the number of creatures with script name
&quot;Name&quot; that have been killed is less than the 2nd parameter.<br>
<br>
<b>0x4074 Detect(O:Object*)<br>
</b>Returns true if the the specified object is detected by the active CRE in
any way (hearing or sight) .<br>
<br>
<b>0x4075 Contains(S:ResRef*,O:Object*)<br>
</b>Returns true only if the item specified in parameter 1 is in the container
specified in parameter 2.<br>
<br>
<b>0x4076 OpenState(O:Object*,I:Open*BOOLEAN)<br>
</b>NT Returns true only if the open state of the specified door matches the
state specified in the 2nd parameter.<br>
<br>
<b>0x4077 NumItems(S:ResRef*,O:Object*,I:Num*)<br>
</b>Returns true only if the specified object has the number of items in the 3rd
parameter of the type specified in the 1st parameter in its inventory.<br>
<br>
<b>0x4078 NumItemsGT(S:ResRef*,O:Object*,I:Num*)<br>
</b>Returns true only if the specified object has more than the number of items
in the 3rd parameter of the type specified in the 1st parameter in its
inventory.<br>
<br>
<b>0x4079 NumItemsLT(S:ResRef*,O:Object*,I:Num*)<br>
</b>Returns true only if the specified object has fewer than the number of items
in the 3rd parameter of the type specified in the 1st parameter in its
inventory.<br>
<br>
<b>0x407A NumItemsParty(S:ResRef*,I:Num*)<br>
</b>Returns true only if the party has a total number of items of the type
specified equal to the 2nd parameter.<br>
<br>
<b>0x407B NumItemsPartyGT(S:ResRef*,I:Num*)<br>
</b>Returns true only if the party has a total number of items of the type
specified greater than the 2nd parameter.<br>
<br>
<b>0x407C NumItemsPartyLT(S:ResRef*,I:Num*)<br>
</b>Returns true only if the party has a total number of items of the type
specified less than the 2nd parameter.<br>
<br>
<b>0x407D IsOverMe(O:Object*)<br>
</b>Only for trigger regions. Returns true only if the specified object is over
the trigger running the script.<br>
<br>
<b>0x407E AreaCheck(S:ResRef*)<br>
</b>Returns true only if the active CRE is in the area specified.<br>
<br>
<b>0x407F HasItemEquiped(S:ResRef*,O:Object*)<br>
</b>Returns true if the specified object has the specified item in one of its
quicklots if it is a weapon, or has it equipped if it is a piece of armour of an
amulet etc.<br>
<br>
<b>0x4080 NumCreatureVsParty(O:Object*,I:Number*)<br>
</b>Returns true if the number of hostile creatures of the type specified in the
1st parameter that are currently in fighting range of the party, is equal to the
2nd parameter.<br>
<br>
<b>0x4081 NumCreatureVsPartyLT(O:Object*,I:Number*)<br>
</b>Returns true if the number of hostile creatures of the type specified in the
1st parameter that are currently in fighting range of the party, is less than
the 2nd parameter.<br>
<br>
<b>0x4082 NumCreatureVsPartyGT(O:Object*,I:Number*)<br>
</b>Returns true if the number of hostile creatures of the type specified in the
1st parameter that are currently in fighting range of the party, is greater than
the 2nd parameter.<br>
<br>
<b>0x4083 CombatCounter(I:Number*)<br>
</b>Returns true only if the combat counter (counts down from 150 after each
attack) is of the value specified. CombatCounter(0) returns true only if there
is no combat in the active area at the moment.<br>
<br>
<b>0x4084 CombatCounterLT(I:Number*)<br>
</b>Returns true only if the combat counter (counts down from 150 after each
attack) is less than the value specified.<br>
<br>
<b>0x4085 CombatCounterGT(I:Number*)<br>
</b>Returns true only if the combat counter (counts down from 150 after each
attack) is greater than the value specified. CombatCounterGT(0) returns true if
there is any combat going on in the active area.<br>
<br>
<b>0x4086 AreaType(I:Number*AREATYPE)<br>
</b>Returns true only if the area in which the active CRE is, has the specified
type flag set.<br>
<br>
<b>0x0087 TrapTriggered(O:Triggerer*)<br>
</b>NT Only for trigger regions/traps. Returns true if this trap was triggered
by the object specified.<br>
<br>
<b>0x0088 PartyMemberDied(O:Object*)<br>
</b>NT Returns true only if the party member specified died in the last script
round.<br>
<br>
<b>0x4089 OR(I:OrCount*)<br>
</b>Returns true if any of the next 'OrCount' triggers returns true.<br>
<br>
<b>0x4090 InPartySlot(O:Object*,I:Slot*)<br>
</b>Returns true only if the specified object is in the party and in the slot
specified.<br>
<br>
<b>0x0091 SpellCast(O:Object*,I:Spell*Spell)<br>
</b>Returns true only if the specified object cast the spell in the 2nd
paramater in the last script round. The spell must be listed in Spell.ids<br>
<br>
<b>0x4092 InLine(S:Target*,O:Object*)<br>
</b>Returns true if the target creature with the scriptname specified in the 1st
parameter is in a line with the object specified in the 2nd parameter. This
object does not have to be able to see the target.<br>
<br>
<b>0x0093 PartyRested()<br>
</b>Returns true if the party has just finished resting.<br>
<br>
<b>0x4094 Level(O:Object*,I:Level*)<br>
</b>Returns true only if the experience level of the specified object equals the
2nd parameter.<br>
<br>
<b>0x4095 LevelGT(O:Object*,I:Level*)<br>
</b>Returns true only if the experience level of the specified object is greater
than the 2nd parameter.<br>
<br>
<b>0x4096 LevelLT(O:Object*,I:Level*)<br>
</b>Returns true only if the experience level of the specified object is less
than the 2nd parameter.<br>
<br>
<b>0x0097 Summoned(O:Object*)<br>
</b>NT Returns true only if the active CRE summoned the specified object in the
last script round.<br>
<br>
<b>0x4098 GlobalsEqual(S:Name1*,S:Name2*)<br>
</b>Returns true only if the 2 global variables specified have equal values.<br>
<br>
<b>0x4099 GlobalsGT(S:Name1*,S:Name2*)<br>
</b>Returns true only if the 1st global variable has a value greater than the
2nd one.<br>
<br>
<b>0x409A GlobalsLT(S:Name1*,S:Name2*)<br>
</b>Returns true only if the 1st global variable has a value less than the 2nd
one.<br>
<br>
<b>0x409B LocalsEqual(S:Name1*,S:Name2*)<br>
</b>Returns true only if the 2 local variables specified have equal values.<br>
<br>
<b>0x409C LocalsGT(S:Name1*,S:Name2*)<br>
</b>Returns true only if the 1st local variable has a value less than the 2nd
one.<br>
<br>
<b>0x409D LocalsLT(S:Name1*,S:Name2*)<br>
</b>Returns true only if the 1st local variable has a value less than the 2nd
one.<br>
<br>
<b>0x409E ObjectActionListEmpty(O:Object*)<br>
</b>Returns true only if the specified object has no actions waiting to be
performed.<br>
<br>
<b>0x409F OnScreen(O:Object*)<br>
</b>Returns true if the specified object is on the screen.<br>
<br>
<b>0x40A0 InActiveArea(O:Object*)<br>
</b>Returns true only if specified object is in the active area. The active area
is that in which player 1 is.<br>
<br>
<b>0x00A1 SpellCastOnMe(O:Caster*,I:Spell*Spell)<br>
</b>Returns true only if the specified object cast the specified spell on the
active CRE in the last scriptround. The spell must be listed in Spell.ids.<br>
<br>
<b>0x40A2 CalanderDay(I:Day*)<br>
</b>NT Returns true only if the current day is the day specified.<br>
<br>
<b>0x40A3 CalanderDayGT(I:Day*)<br>
</b>NT Returns true only if the current day is after the day specified.<br>
<br>
<b>0x40A4 CalanderDayLT(I:Day*)<br>
</b>NT Returns true only if the current day is before the day specified.<br>
<br>
<b>0x40A5 Name(S:Name*,O:Object*)<br>
</b>NT Returns true only if the object in the 2nd parameter has the name (or
scriptname?)<br>
specified.<br>
<br>
<b>0x00A6 SpellCastPriest(O:Object*,I:Spell*Spell)<br>
</b>Returns true only if the specified object cast the specified priest spell in
the last script round.<br>
<br>
<b>0x00A7 SpellCastInnate(O:Object*,I:Spell*Spell)<br>
</b>Returns true only if the specified object cast the specified innate spell in
the last script round.<br>
<br>
<b>0x40A8 IsValidForPartyDialog(O:Object*)<br>
</b>Returns true only if that specifed party member can take part in party
dialogue.<br>
<br>
<b>0x40A8 IfValidForPartyDialog(O:Object*)<br>
</b><br>
<br>
<b>0x40A8 IsValidForPartyDialogue(O:Object*)<br>
</b><br>
<br>
<b>0x40A8 IfValidForPartyDialogue(O:Object*)<br>
</b><br>
<br>
<b>0x40A9 PartyHasItemIdentified(S:ResRef*)<br>
</b>Returns true only if the party has the item specified and it is identified.<br>
<br>
<b>0x40B0 HasBounceEffects(O:Object*)<br>
</b>Information from http://groups.yahoo.com/group/BG2/files/SR/BG2SR.htm.<br>
Returns true if one of the following spells is active on the specified object:<br>
Minor Spell Turning<br>
Physical Mirror<br>
Spell Turning<br>
(Item: Cloak of Mirroring)<br>
(Item: Shield of Reflection +1)<br>
<br>
<br>
<b>0x40B1 HasImmunityEffects(O:Object*)<br>
</b>Information from http://groups.yahoo.com/group/BG2/files/SR/BG2SR.htm.<br>
Returns true if one of the following spells is active on the specified object:<br>
Minor Spell Turning<br>
Chaotic Commands<br>
Death Ward (also SCRIPTINGSTATE2)<br>
Free Action<br>
Globe of Invulnerability<br>
(also MINORGLOBE)<br>
Minor Globe of Invulnerability (also MINORGLOBE)<br>
Minor Spell Deflection Negative Plane Protection (also SCRIPTINGSTATE3)<br>
Protection from Normal Missiles (also SHIELDGLOBE)<br>
Protection from Petrification<br>
Remove Fear<br>
Resist Fear<br>
Shapechange (Troll only)<br>
Shield of the Archons<br>
Spell Deflection<br>
Spell Immunity<br>
Spell Shield<br>
Vocalize<br>
(Item: Ring of Free Action)<br>
(Not Spell Trap)<br>
<br>
<br>
<b>0x40B2 HasItemSlot(O:Object*,I:Slot*SLOTS)<br>
</b>NT Returns true only if the specified object has an item in the specified
slot.<br>
<br>
<b>0x40B3 PersonalSpaceDistance(O:Object*,I:Range*)<br>
</b>NT Returns true if the specified object is at least as far away from the
active CRE as the 2nd parameter specifies.<br>
<br>
<b>0x40B4 InMyGroup(O:Object*)<br>
</b>Returns true only if the allegiance of the specified object is the same as
that of the active CRE. GOODCUTOFF are all in the player's group for example.<br>
<br>
<b>0x40B5 RealGlobalTimerExact(S:Name*,S:Area*)<br>
</b>NT<br>
<br>
<b>0x40B6 RealGlobalTimerExpired(S:Name*,S:Area*)<br>
</b>NT Returns true only if the timer with the specified name of the specified
area has been set at least once and has now expired.<br>
<br>
<b>0x40B7 RealGlobalTimerNotExpired(S:Name*,S:Area*)<br>
</b>NT Returns true only if the timer with the specified name of the specified
area has been set and has not yet expired.<br>
<br>
<b>0x40B8 NumInPartyAlive(I:Num*)<br>
</b>Returns true only if the number of party members alive is equal to the
number specified.<br>
<br>
<b>0x40B9 NumInPartyAliveGT(I:Num*)<br>
</b>Returns true only if the number of party members alive is greater than the
number specified.<br>
<br>
<b>0x40BA NumInPartyAliveLT(I:Num*)<br>
</b>Returns true only if the number of party members alive is less than the
number specified.<br>
<br>
<b>0x40BB Kit(O:Object*,I:Kit*KIT)<br>
</b>NT Returns true only if the specified object is of the kit specified.<br>
<br>
<b>0x40BC IsGabber(O:Object*)<br>
</b>NT Returns true only if the specified object is in the party but is not the
protagonist.<br>
<br>
<b>0x40BD IsActive(O:Object*)<br>
</b>NT<br>
<br>
<b>0x40BE CharName(S:Name*,O:Object*)<br>
</b>NT Returns true only if the specified object has the character name
specified.<br>
<br>
<b>0x40BF FallenRanger(O:Object*)<br>
</b>NT Returns true only if the specified object is a fallen ranger.<br>
<br>
<b>0x40C0 FallenPaladin(O:Object*)<br>
</b>NT Returns true only if the specified object is a fallen ranger.<br>
<br>
<b>0x40C1 InventoryFull(O:Object*)<br>
</b>Returns true only if the specified object can carry no more items.<br>
<br>
<b>0x40C2 HasItemEquipedReal(S:ResRef*,O:Object*)<br>
</b>Returns true only if the specified object has the specified item equipped
and it is in use.<br>
<br>
<b>0x40C3 XP(O:Object*,I:XP)<br>
</b>Returns true if the specified object has experience points equal to the
number specified.<br>
<br>
<b>0x40C4 XPGT(O:Object*,I:XP)<br>
</b>Returns true if the specified object has experience points greater than the
number specified.<br>
<br>
<b>0x40C5 XPLT(O:Object*,I:XP)<br>
</b>Returns true if the specified object has experience points less than the
number specified.<br>
<br>
<b>0x40C6 G(S:ResRef*,I:Num*)<br>
</b>NT<br>
<br>
<b>0x40C7 GGT(S:ResRef*,I:Num*)<br>
</b>NT<br>
<br>
<b>0x40C8 GLT(S:ResRef*,I:Num*)<br>
</b>NT<br>
<br>
<b>0x40C9 ModalState(I:State*MODAL)<br>
</b>Returns true only if the active CRE is in the state/mode specified. e.g.
detecting traps.<br>
<br>
<b>0x40CB InMyArea(O:Object*)<br>
</b>Returns true only if the specified object is in the same area as the active
CRE.<br>
<br>
<b>0x00CC TookDamage()<br>
</b>Returns true if some type of damage was caused to the active CRE (and HP
were lost)<br>
in the last script round.<br>
<br>
<b>0x40CD DamageTaken(I:Amount*)<br>
</b>Returns true if the total damage taken by the active CRE is of the amount
specified. Think of this as the reverse of testing for HP. See HP.<br>
<br>
<b>0x40CE DamageTakenGT(I:Amount*)<br>
</b>See above and HPGT.<br>
<br>
<b>0x40CF DamageTakenLT(I:Amount*)<br>
</b>See above and HPLT.<br>
<br>
<b>0x40D0 Difficulty(I:Amount*DIFFLEV)<br>
</b>NT Returns true only if the game difficulty setting is of the level
specified.<br>
<br>
<b>0x40D1 DifficultyGT(I:Amount*DIFFLEV)<br>
</b>NT Returns true only if the game difficulty setting is greater than the
level specified.<br>
<br>
<b>0x40D2 DifficultyLT(I:Amount*DIFFLEV)<br>
</b>NT Returns true only if the game difficulty setting is less than the level
specified.<br>
<br>
<b>0x40D3 InPartyAllowDead(O:Object*)<br>
</b>NT Returns true if the specified object which can be dead or alive is in the
party.<br>
<br>
<b>0x40D4 AreaCheckObject(S:ResRef*,O:Object*)<br>
</b>Returns true if the specified object is in the area specified.<br>
<br>
<b>0x40D5 ActuallyInCombat()<br>
</b>NT Returns true if combat counter is greater than 0 and the active CRE is in
sight of an enemy.<br>
<br>
<b>0x00D6 WalkedToTrigger(O:Object*)<br>
</b>NT Only for trigger regions. Returns true if the specified object has walked
to this trigger.<br>
<br>
<b>0x40D7 LevelParty(I:Num*)<br>
</b>NT Returns true only if the level of the highest-levelled party member is
equal to the number specified.<br>
<br>
<b>0x40D8 LevelPartyGT(I:Num*)<br>
</b>NT As above but greater than.<br>
<br>
<b>0x40D9 LevelPartyLT(I:Num*)<br>
</b>NT As above but less than.<br>
<br>
<b>0x40DA HaveSpellParty(I:Spell*Spell)<br>
</b>NT Returns true if any of the party members have the specified spell
memorised, which must be listed in the spell.ids.<br>
<br>
<b>0x4031 HaveSpellRES(S:Spell*)<br>
</b>ToB only. Returns true if the active CRE has the specified (by the string
parameter)<br>
spell memorised.<br>
<br>
<b>0x40DB AmIInWatchersKeepPleaseIgnoreTheLackOfApostophe()<br>
</b>NT ToB only. Returns true only if the active CRE is in watcher's keep.<br>
<br>
<b>0x40DB InWatchersKeep()<br>
</b>NT As above.</font></p>
</body>


<!-- Mirrored from www25.brinkster.com by HTTrack Website Copier/3.x [XR,YP'2001] -->
</html>
