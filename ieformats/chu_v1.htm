<html>
<head>
<link rel="stylesheet" type="text/css" href="general.css" />
</head>
<body>
<div class="title_main">CHUI file format</div>
<br />
<div class="fileheader">Applies to:</div>
<div class="indent1">BG1, BG1: TotS, BG2, BG2: ToB, PST, IWD, IWD:HoW, IWD:TotL, IWD2</div>
<br />

<div class="fileheader">General Description</div>
<div class="indent1">
The Infinity Engine GUI is represented through a combination of these CHUI
files and the MOS and BAM files 
which are used for their visual representation. Roughly, the GUI is composed of 
multiple &quot;windows&quot;, any number of which can be activated at once; each 
window can have any number of &quot;controls&quot;. A &quot;window&quot; can have a 
MOS file as its background, or it can have no background. 
A &quot;control&quot; has various parameters, one of which typically includes 
BAM files, along with cycle and frame indices to choose 
which frame of the BAM file to display.<br />
</div>
<br />

<div class="fileheader">Detailed Description</a></div>
<div class="indent1">
Overall structure:<br />
<div class="indent1">
  <li><a href="#chuiv1_Header">Header</a>
  <li><a href="#chuiv1_Window">Windows</a>
  <li><a href="#chuiv1_CtlTable">Control table</a>
  <li><a href="#chuiv1_Control">Controls</a></li>
</div>
<br />
</div>

<div class="fileheader"><a name="chuiv1_Header">CHUI V1 Header</a></div>
<br />
<div class="indent1">
<table border="1" width="98%">
  <colgroup>
    <col width="5%">
    <col width="12%">
    <col width="*">
  </colgroup>
  <thead>
    <tr>
      <th>Offset</th>
      <th>Size (data type)</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>0x0000</td>
      <td>4 (char array)</td>
      <td>Signature ('CHUI')</td>
    </tr>
    <tr>
      <td>0x0004</td>
      <td>4 (char array)</td>
      <td>Version ('V1 ')</td>
    </tr>
    <tr>
      <td>0x0008</td>
      <td>4 (dword)</td>
      <td>Number of <a href="#chuiv1_Window">windows</a> in this file.</td>
    </tr>
    <tr>
      <td>0x000c</td>
      <td>4 (dword)</td>
      <td>Offset from start of file to <a href="#chuiv1_CtlTable">controls
        table</a>.</td>
    </tr>
    <tr>
      <td>0x0010</td>
      <td>4 (dword)</td>
      <td>Offset from start of file to <a href="#chuiv1_Window">window
        entries</a>.</td>
    </tr>
  </tbody>
</table>
</div>
<br />

<div class="fileheader"><a name="chuiv1_Window">CHUI V1 Windows</a></div>
<br />
<div class="indent1">
An interesting note about this structure. In BG, all of the CHUI files except
for 1 exhibit a particular structure in their windows. (They are all 28 bytes in
length.) This one exceptional file exhibits a 36-byte structure, which is
essentially the 28-byte structure, except with an 8-byte descriptive name
prepended. The question this raises is whether that exceptional file is a glitch
or part of some additional unseen structure. It <em>appears</em> from the
analysis I've done that the 36-byte file is spurious and was unintentionally
included (i.e. the format of the file changed internally, and the version number
didn't change. Then, when they were packing up the BIF files, they
unintentionally included some files which were no longer needed. This wouldn't
be too surprising, since there were BG files included in the Torment packaging,
too.) Anyway, so the structure as presented here does not account for the
spurious file. It is possible to create a routine to handle both types, simply
because <code>(offsetCtlTab - offsetWindows) / numWindows</code> should be equal
to the size of the window struct. But it's not clear that this is necessary.
Most of the routines in BG are hard-coded to a 28-byte long window structure.<br />
<br />
<table border="1" width="98%">
  <colgroup>
    <col width="5%">
    <col width="12%">
    <col width="*">
  </colgroup>
  <thead>
    <tr>
      <th>Offset</th>
      <th>Size (data type)</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>0x0000</td>
      <td>2 (word)</td>
      <td>Window ID</td>
    </tr>
    <tr>
      <td>0x0002</td>
      <td>2 (unknown)</td>
      <td><span class="unknown">Unknown</span></td>
    </tr>
    <tr>
      <td>0x0004</td>
      <td>2 (word)</td>
      <td>X position</td>
    </tr>
    <tr>
      <td>0x0006</td>
      <td>2 (word)</td>
      <td>Y position</td>
    </tr>
    <tr>
      <td>0x0008</td>
      <td>2 (word)</td>
      <td>Width</td>
    </tr>
    <tr>
      <td>0x000a</td>
      <td>2 (word)</td>
      <td>Height</td>
    </tr>
    <tr>
      <td>0x000c</td>
      <td>2 (word)</td>
      <td>Background flag (0=No background, 1=Background)</td>
    </tr>
    <tr>
      <td>0x000e</td>
      <td>2 (word)</td>
      <td>Number of <a href="#chuiv1_CtlTable">controls</a> in this window</td>
    </tr>
    <tr>
      <td>0x0010</td>
      <td>8 (resref)</td>
      <td>Filename of background (if present). (<a href="mos_v1.htm">MOS file</a>)</td>
    </tr>
    <tr>
      <td>0x0018</td>
      <td>2 (word)</td>
      <td>Index of the first <a href="#chuiv1_CtlTable">control</a> in this
        window</td>
    </tr>
    <tr>
      <td>0x001a</td>
      <td>2 (word)</td>
      <td><span class="unknown">Unknown</span></td>
    </tr>
  </tbody>
</table>
</div>
<br />

<div class="fileheader"><a name="chuiv1_CtlTable">CHUI V1 Control table</a></div>
<br />
<div class="indent1">
The different types of controls are all different sizes. Thus, in order to
quickly set up the pointer structure after the data file is loaded, they need to
store the offsets of each control. For some reason, they also store the size of
the control structure. This is mystifying, since they almost never move things
around in memory -- typically, they load the resource as one chunk, and then
setup pointers to the appropriate bits, never having moved anything or done any
more memory allocation than necessary. Actually a pretty fast way to deal with
resources, although I suspect that performance might suffer at times from
non-aligned memory access of commonly used fields.<br />
<br />
<table border="1" width="98%">
  <colgroup>
    <col width="5%">
    <col width="12%">
    <col width="*">
  </colgroup>
  <thead>
    <tr>
      <th>Offset</th>
      <th>Size (data type)</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>0x0000</td>
      <td>4 (dword)</td>
      <td>Offset of actual <a href="#chuiv1_Control">control</a> structure</td>
    </tr>
    <tr>
      <td>0x0004</td>
      <td>4 (dword)</td>
      <td>Length of actual <a href="#chuiv1_Control">control</a> structure</td>
    </tr>
  </tbody>
</table>
</div>
<br />

<div class="fileheader"><a name="chuiv1_Control">CHUI V1 Controls</a></div>
<br />
<div class="indent1">
The different types of controls have different layouts; however, there is a common format for the first portion of the control, which dictates its position, its type, and a few other things.<br />
The known control types are:<br />
<div class="indent1">
  <li><a href="#chuiv1_Control_0">Type 0: Buttons/toggle buttons/pixmaps</a>
  <li><a href="#chuiv1_Control_2">Type 2: Slider Control</a>
  <li><a href="#chuiv1_Control_3">Type 3: TextEdit field</a>
  <li><a href="#chuiv1_Control_5">Type 5: TextArea (optionally scrolled)</a>
  <li><a href="#chuiv1_Control_6">Type 6: Label</a>
  <li><a href="#chuiv1_Control_7">Type 7: Scrollbar</a></li>
</div>
<br />
</div>

<div class="fileheader"><a name="chuiv1_Control_Common">Fields common to all control types</a></div>
<br />
<div class="indent1">
<table border="1" width="98%">
  <colgroup>
    <col width="5%">
    <col width="12%">
    <col width="*">
  </colgroup>
  <thead>
    <tr>
      <th>Offset</th>
      <th>Size (data type)</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>0x0000</td>
      <td>4 (dword)</td>
      <td>Control ID (presumably used in the executable to identify which
        control was manipulated)</td>
    </tr>
    <tr>
      <td>0x0004</td>
      <td>2 (word)</td>
      <td>X position of control relative to containing window</td>
    </tr>
    <tr>
      <td>0x0006</td>
      <td>2 (word)</td>
      <td>Y position of control relative to containing window</td>
    </tr>
    <tr>
      <td>0x0008</td>
      <td>2 (word)</td>
      <td>Width of control</td>
    </tr>
    <tr>
      <td>0x000a</td>
      <td>2 (word)</td>
      <td>Height of control</td>
    </tr>
    <tr>
      <td>0x000c</td>
      <td>1 (byte)</td>
      <td>Type of control (see below)</td>
    </tr>
    <tr>
      <td>0x000d</td>
      <td>1 (byte)</td>
      <td><span class="unknown">Unknown</span></td>
    </tr>
  </tbody>
</table>
</div>
<br />

<div class="fileheader"><a name="chuiv1_Control_0">CHUI V1 Controls: type 0: buttons/toggle
buttons/pixmaps</a></div>
<br />
<div class="indent1">
This is a simple type of control. It has an associated BAM file, a 'cycle
number', which selects which cycle in the BAM to use frames from, and several
associated frame numbers. For static pixmaps, clicks are ignored, and the
pressed/unpressed frame indices are the same. For buttons, there is a pressed
and an unpressed frame. Now, a caveat about this format. I believe that I have
figured out the format of this type of control; however, I have found a file
which does not quite appear to follow this format. This is the same file which
is mentioned <a href="#chuiv1_Window">above</a> whose windows appear to
follow a different format from those of every other CHUI file in the game. For
this reason, it seems highly likely that this is not a valid data point for
disproving this format; however, keep this in mind while you examine this
format.<br />
<br />
<table border="1" width="98%">
  <colgroup>
    <col width="5%">
    <col width="12%">
    <col width="*">
  </colgroup>
  <thead>
    <tr>
      <th>Offset</th>
      <th>Size (data type)</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>0x0000</td>
      <td>14 (common section)</td>
      <td><a href="#chuiv1_Control_Common">Fields common to all control
        types</a></td>
    </tr>
    <tr>
      <td>0x000e</td>
      <td>8 (resref)</td>
      <td>The resource name of the BAM file from 
      which the graphics for this button are taken.</td>
    </tr>
    <tr>
      <td>0x0016</td>
      <td>1 (byte)</td>
      <td>The cycle from the BAM file to take our graphics from.</td>
    </tr>
    <tr>
      <td>0x0017</td>
      <td>1 (byte)</td>
      <td>Button text justification flags: <br />
          <div class="indent1">
           bit 0: Left justify text<br />
           bit 1: Right justify text<br />
           bit 2: Top justify text<br />
           bit 3: Bottom justify text<br />
           bit 4: Anchor text to 0,0<br />
           bit 5: Reduce text size<br />
        </div>
        <br />
        NB. With no bits set the text is centred (horizontally and vertically)
      </td>
    </tr>
    <tr>
      <td>0x0018</td>
      <td>2 (word)</td>
      <td>Frame index from BAM file: Button unpressed</td>
    </tr>
    <tr>
      <td>0x001a</td>
      <td>2 (word)</td>
      <td>Frame index from BAM file: Button pressed</td>
    </tr>
    <tr>
      <td>0x001c</td>
      <td>2 (word)</td>
      <td>Frame index from BAM file: Button selected</td>
    </tr>
    <tr>
      <td>0x001e</td>
      <td>2 (word)</td>
      <td>Frame index from BAM file: Button disabled</td>
    </tr>
  </tbody>
</table>
</div>
<br />

<div class="fileheader"><a name="chuiv1_Control_2">CHUI V1 Controls: type 2: Slider Control</a></div>
<br />
<div class="indent1">
<table border="1" width="98%">
  <colgroup>
    <col width="5%">
    <col width="12%">
    <col width="*">
  </colgroup>
  <thead>
    <tr>
      <th>Offset</th>
      <th>Size (data type)</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>0x0000</td>
      <td>14 (common section)</td>
      <td><a href="#chuiv1_Control_Common">Fields common to all control
        types</a></td>
    </tr>
    <tr>
      <td>0x000e</td>
      <td>8 (resref)</td>
      <td>Resource name of MOS file used for background of slider control</td>
    </tr>
    <tr>
      <td>0x0016</td>
      <td>8 (resref)</td>
      <td>Resource name of BAM file used for slider knob of control</td>
    </tr>
    <tr>
      <td>0x001e</td>
      <td>2 (word)</td>
      <td>Cycle number from BAM to take our graphics from.</td>
    </tr>
    <tr>
      <td>0x0020</td>
      <td>2 (word)</td>
      <td>Frame index from BAM file: Slider ungrabbed</td>
    </tr>
    <tr>
      <td>0x0022</td>
      <td>2 (word)</td>
      <td>Frame index from BAM file: Slider grabbed</td>
    </tr>
    <tr>
      <td>0x0024</td>
      <td>2 (word)</td>
      <td>Knob x offset</td>
    </tr>
    <tr>
      <td>0x0026</td>
      <td>2 (word)</td>
      <td>Knob y offset</td>
    </tr>
    <tr>
      <td>0x0028</td>
      <td>2 (word)</td>
      <td>Knob jump width</td>
    </tr>
    <tr>
      <td>0x002a</td>
      <td>2 (word)</td>
      <td>Knob jump count</td>
    </tr>
    <tr>
      <td>0x002c</td>
      <td>2 (word)</td>
      <td><span class="unknown">Unknown</span></td>
    </tr>
    <tr>
      <td>0x002e</td>
      <td>2 (word)</td>
      <td><span class="unknown">Unknown</span></td>
    </tr>
    <tr>
      <td>0x0030</td>
      <td>2 (word)</td>
      <td><span class="unknown">Unknown</span></td>
    </tr>
    <tr>
      <td>0x0032</td>
      <td>2 (word)</td>
      <td><span class="unknown">Unknown</span></td>
    </tr>
  </tbody>
</table>
</div>
<br />

<div class="fileheader"><a name="chuiv1_Control_3">CHUI V1 Controls: type 3: TextEdit field</a></div>
<br />
<div class="indent1">
Text edit fields, similar to that used for multi-player chat mode, typing in
the name of your player, or entering cheat codes. Again, this control is mostly
mysterious, still. Some of the unknown bytes must code for the cycle number and
frame number in the BAM file to use for the cursor graphic, but I don't know
which.<br />
<br />
<table border="1" width="98%">
  <colgroup>
    <col width="5%">
    <col width="12%">
    <col width="*">
  </colgroup>
  <thead>
    <tr>
      <th>Offset</th>
      <th>Size (data type)</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>0x0000</td>
      <td>14 (common section)</td>
      <td><a href="#chuiv1_Control_Common">Fields common to all control
        types</a></td>
    </tr>
    <tr>
      <td>0x000e</td>
      <td>8 (resref)</td>
      <td>MOS file resource name (background #1) what is this used for?</td>
    </tr>
    <tr>
      <td>0x0016</td>
      <td>8 (resref)</td>
      <td>MOS file resource name (background #2) what is this used for?</td>
    </tr>
    <tr>
      <td>0x001e</td>
      <td>8 (resref)</td>
      <td>MOS file resource name (background #3) what is this used for?</td>
    </tr>
    <tr>
      <td>0x0026</td>
      <td>8 (resref)</td>
      <td>BAM file resource name (cursor)</td>
    </tr>
    <tr>
      <td>0x002e</td>
      <td>4 (dword)</td>
      <td><span class="unknown"> Unknown</span></td>
    </tr>
    <tr>
      <td>0x0032</td>
      <td>2 (word)</td>
      <td>X position</td>
    </tr>
    <tr>
      <td>0x0034</td>
      <td>2 (word)</td>
      <td>Y position</td>
    </tr>
    <tr>
      <td>0x0036</td>
      <td>4 (dword)</td>
      <td><span class="unknown"> Unknown</span></td>
    </tr>
    <tr>
      <td>0x003a</td>
      <td>8 (resref)</td>
      <td>BAM file resource name (font). To display using a BAM font, use frame
        #0, cycle #c, where c is the ascii value of the char you are trying to
        print.</td>
    </tr>
    <tr>
      <td>0x0042</td>
      <td>34 (unknown)</td>
      <td><span class="unknown">Unknown</span></td>
    </tr>
    <tr>
      <td>0x0064</td>
      <td>2 (word)</td>
      <td>Max input length</td>
    </tr>
    <tr>
      <td>0x0066</td>
      <td>4 (dword)</td>
      <td><span class="unknown">Unknown</span></td>
    </tr>
  </tbody>
</table>
</div>
<br />

<div class="fileheader"><a name="chuiv1_Control_5">CHUI V1 Controls: type 5: TextArea (optionally scrolled)</a></div>
<br />
<div class="indent1">
Just about any text with a scrollbar you see in BG uses this control type.
For instance, scrolled character sheet, or inventory item description. It is not
entirely clear why there are two fonts and 3 colors involved here; I can't shed
too much light on this, except to mention that in many cases, one of the fonts
is the &quot;illuminated manuscript&quot; style font that is used for the first
character of text in some dialogs. Beyond that, it's still a mystery.<br />
<br />
<table border="1" width="98%">
  <colgroup>
    <col width="5%">
    <col width="12%">
    <col width="*">
  </colgroup>
  <thead>
    <tr>
      <th>Offset</th>
      <th>Size (data type)</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>0x0000</td>
      <td>14 (common section)</td>
      <td><a href="#chuiv1_Control_Common">Fields common to all control
        types</a></td>
    </tr>
    <tr>
      <td>0x000e</td>
      <td>8 (resref)</td>
      <td>BAM file font #1 - initials</td>
    </tr>
    <tr>
      <td>0x0016</td>
      <td>8 (resref)</td>
      <td>BAM file font #2 - main text</td>
    </tr>
    <tr>
      <td>0x001e</td>
      <td>4 (RGBa color)</td>
      <td>Colour #1 (what is this used for?)</td>
    </tr>
    <tr>
      <td>0x0022</td>
      <td>4 (RGBa color)</td>
      <td>Colour #2 (what is this used for?)</td>
    </tr>
    <tr>
      <td>0x0026</td>
      <td>4 (RGBa color)</td>
      <td>Colour #3 (what is this used for?)</td>
    </tr>
    <tr>
      <td>0x002a</td>
      <td>4 (control ID)</td>
      <td>ID field from the scroll bar attached to this, if any, or 0xffffffff
        if no scrollbar is used.</td>
    </tr>
  </tbody>
</table>
</div>
<br />

<div class="fileheader"><a name="chuiv1_Control_6">CHUI V1 Controls: type 6: Label</a></div>
<br />
<div class="indent1">
Many static labels use this. It may have more functionality than that, but
that's all I know about. (i.e. I believe it ignores input and is only used for
outputting text, primarily labels<br />
<br />
<table border="1" width="98%">
  <colgroup>
    <col width="5%">
    <col width="12%">
    <col width="*">
  </colgroup>
  <thead>
    <tr>
      <th>Offset</th>
      <th>Size (datatype)</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>0x0000</td>
      <td>14 (common section)</td>
      <td><a href="#chuiv1_Control_Common">Fields common to all control
        types</a></td>
    </tr>
    <tr>
      <td>0x000e</td>
      <td>4 (strref)</td>
      <td>Initial value for text to be loaded from Strref</td>
    </tr>
    <tr>
      <td>0x0012</td>
      <td>8 (resref)</td>
      <td>BAM file name (font for displaying text)</td>
    </tr>
    <tr>
      <td>0x001a</td>
      <td>4 (RGBa color)</td>
      <td>Colour #1 (background?)</td>
    </tr>
    <tr>
      <td>0x001e</td>
      <td>4 (RGBa color)</td>
      <td>Colour #2 (foreground?)</td>
    </tr>
    <tr>
      <td>0x0022</td>
      <td>2 (word)</td>
      <td>Subtype (justification):<br />
          <div class="indent1">
           1: Use rgb colors<br />
           2: <span class="unknown">Unknown</span><br />
           4: Center justification<br />
           8: Left justification<br />
           16: Right justification<br />
           32: Top justification<br />
           64: <span class="unknown">Unknown</span><br />
           128: Bottom justification<br />
           In case of combined values (0x18), right justification takes precedence. RGB colours are interpolated from index 1 to index 256.<br />
        </div>
      </td>
    </tr>
  </tbody>
</table>
</div>
<br />

<div class="fileheader"><a name="chuiv1_Control_7">CHUI V1 Controls: type 7: Scrollbar</a></div>
<br />
<div class="indent1">
These scroll-bars are usually attached to a text-area.<br />
<br />
<table border="1" width="98%">
  <colgroup>
    <col width="5%">
    <col width="12%">
    <col width="*">
  </colgroup>
  <thead>
    <tr>
      <th>Offset</th>
      <th>Size (datatype)</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>0x0000</td>
      <td>14 (common section)</td>
      <td><a href="#chuiv1_Control_Common">Fields common to all control
        types</td>
    </tr>
    <tr>
      <td>0x000e</td>
      <td>8 (resref)</td>
      <td>BAM file name: resource from which to take our graphical representation</td>
    </tr>
    <tr>
      <td>0x0016</td>
      <td>2 (word)</td>
      <td>Cycle from BAM file to use for our graphics</td>
    </tr>
    <tr>
      <td>0x0018</td>
      <td>2 (word)</td>
      <td>Frame index from BAM file : up-arrow, unpressed</td>
    </tr>
    <tr>
      <td>0x001a</td>
      <td>2 (word)</td>
      <td>Frame index from BAM file : up-arrow, pressed</td>
    </tr>
    <tr>
      <td>0x001c</td>
      <td>2 (word)</td>
      <td>Frame index from BAM file : down-arrow, unpressed</td>
    </tr>
    <tr>
      <td>0x001e</td>
      <td>2 (word)</td>
      <td>Frame index from BAM file : down-arrow, pressed</td>
    </tr>
    <tr>
      <td>0x0020</td>
      <td>2 (word)</td>
      <td>Frame index from BAM file : trough</td>
    </tr>
    <tr>
      <td>0x0022</td>
      <td>2 (word)</td>
      <td>Frame index from BAM file : slider</td>
    </tr>
    <tr>
      <td>0x0024</td>
      <td>4 (control ID)</td>
      <td>ID field from text area control this scroll-bar scrolls, if any, or 0xffffffff if this scroll bar is not attached to a text area.</td>
    </tr>
  </tbody>
</table>
</div>
</body>
</html>
