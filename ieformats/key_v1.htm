<html>
<head>
<link rel="stylesheet" type="text/css" href="general.css" />
</head>
<body>
<div class="title_main">KEY file format</div>
<br />
<div class="fileheader">Applies to:</div>
<div class="indent1">BG1, BG1: TotS, BG2, BG2: ToB, PST, IWD, IWD:HoW, IWD:TotL, IWD2</div>
<br />

<div class="fileheader">General Description</div>
<div class="indent1">
Each Infinity Engine game has a KEY file with it. The KEY file is loaded at startup, and the resources indexed in it are added to a hash table. <a href="bif_v1.htm"> BIF files</a> included in the game should be indexed in the KEY file, so that the resource manager knows which resources may be found in each <a href="bif_v1.htm"> BIF file</a>. The KEY file indicates which files are contained in which <a href="bif_v1.htm"> BIF</a>, and what locations (CDs, cache directory, etc) should be searched for the resource. The KEY file also maintains a mapping from resource names (8-byte names) to a 32-bit ID of sorts, 
of which the bottom 12-bits are used to identify an individual resource within a <a href="bif_v1.htm"> BIF file</a>.<br />
</div>
<br />

<div class="fileheader">General Description</div>
<div class="indent1">
Overall structure:<br />
<div class="indent1">
  <li><a href="#keyv1_Header">Header</a>
  <li><a href="#keyv1_BifIndices">Bif indices</a>
  <li><em>Strings referenced by Bif indices</em>
  <li><a href="#keyv1_ResIndices">Resource indices</a></li>
</div>
<br />
</div>

<div class="fileheader"><a name="keyv1_Header">KEY V1 Header</a></div>
<br />
<div class="indent1">
<table border="1" width="98%">
  <colgroup>
    <col width="5%">
    <col width="12%">
    <col width="*">
  </colgroup>
  <thead>
    <tr>
      <th>Offset</th>
      <th>Size (data type)</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>0x0000</td>
      <td>4 (char array)</td>
      <td>Signature ('KEY ')</td>
    </tr>
    <tr>
      <td>0x0004</td>
      <td>4 (char array)</td>
      <td>Version ('V1 ')</td>
    </tr>
    <tr>
      <td>0x0008</td>
      <td>4 (dword)</td>
      <td>Number of <a href="#keyv1_BifIndices">BIF entries</a></td>
    </tr>
    <tr>
      <td>0x000c</td>
      <td>4 (dword)</td>
      <td>Number of <a href="#keyv1_ResIndices">resource entries</a></td>
    </tr>
    <tr>
      <td>0x0010</td>
      <td>4 (dword)</td>
      <td>Offset of <a href="#keyv1_BifIndices">BIF entries</a> from start
        of file</td>
    </tr>
    <tr>
      <td>0x0014</td>
      <td>4 (dword)</td>
      <td>Offset of <a href="#keyv1_ResIndices">resource entries</a> from
        start of file</td>
    </tr>
  </tbody>
</table>
</div>
<br />

<div class="fileheader"><a name="keyv1_BifIndices">KEY V1 Bif Entries</a></div>
<br />
<div class="indent1">
The BIF entries typically occur immediately after the header. The structures are packed tight -- i.e. not padded to a multiple of 4 bytes.<br />
<br />
<table border="1" width="98%">
  <colgroup>
    <col width="5%">
    <col width="12%">
    <col width="*">
  </colgroup>
  <thead>
    <tr>
      <th>Offset</th>
      <th>Size (data type)</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>0x0000</td>
      <td>4 (dword)</td>
      <td>Length of BIF file</td>
    </tr>
    <tr>
      <td>0x0004</td>
      <td>4 (dword)</td>
      <td>Offset from start of file to ASCIIZ BIF filename</td>
    </tr>
    <tr>
      <td>0x0008</td>
      <td>2 (word)</td>
      <td>Length, including terminating NUL, of ASCIIZ BIF filename</td>
    </tr>
    <tr>
      <td>0x000a</td>
      <td>2 (word)</td>
      <td>The 16 bits of this field are used individually to mark the location of the relevant file.<br />
          (MSB) xxxx xxxx ABCD EFGH (LSB)<br />
          Bits marked A to F determine on which CD the file is stored (A = CD6, F = CD1).<br />
          Bit G determines if the file is in the \cache directory.<br />
          Bit H determines if the file is in the \data directory.<br />
      </td>
    </tr>
  </tbody>
</table>
</div>
<br />

<div class="fileheader"><a name="keyv1_ResIndices">KEY V1 Resource Entries</a></div>
<br />
<div class="indent1">
The resource entries typically occur immediately after the strings section for the BIF filenames.<br />
<br />
<table border="1" width="98%">
  <colgroup>
    <col width="5%">
    <col width="12%">
    <col width="*">
  </colgroup>
  <thead>
    <tr>
      <th>Offset</th>
      <th>Size (data type)</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>0x0000</td>
      <td>8 (resref)</td>
      <td>Resource name. Together with the resource type, this allows a resource
        to be uniquely identified.</td>
    </tr>
    <tr>
      <td>0x0008</td>
      <td>2 (word)</td>
      <td>Resource type (see the table of resTypes for the allowable values of this word (some of which are different between, e.g. BG and Torment, or even BG and ToTSC).</td>
    </tr>
    <tr>
      <td>0x000a</td>
      <td>4 (dword)</td>
      <td>Resource locator. Throughout the resource manager of the Infinity Engine, 32-bit values are used as a sort of 'resource index', which codifies the source of the resource as well as which source it refers to. This is that value, as stored on disk. It can go through some changes as it is being loaded, but the basic layout of the value on disk is:<br />
          <br />
          <div class="indent1">
            <li>bits 31-20: source index (on disk, this is the ordinal value giving the index of the corresponding bif entry)</li>
            <li>bits 19-14: tileset index</li>
            <li>bits 13- 0: non-tileset file index (any 12 bit value, so long as it matches the value used in the .bif file)</li>
          </div>
        <br />
        In memory, the 'bif index' becomes the 'source index' (i.e. can refer to override directory files, or whatever).</td>
    </tr>
  </tbody>
</table>
</div>

</body>
</html>
